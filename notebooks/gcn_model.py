{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "798517b0",
   "metadata": {},
   "source": [
    "### Import Packages"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "ba06bc3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/victor/Library/Python/3.9/lib/python/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
      "  from .autonotebook import tqdm as notebook_tqdm\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import torch\n",
    "from torch_geometric.data import Data\n",
    "import torch.nn.functional as F\n",
    "from torch.nn import Linear\n",
    "from torch_geometric.nn import GCNConv\n",
    "import torch.nn as nn\n",
    "from itertools import product\n",
    "from sklearn.metrics import f1_score, roc_auc_score, precision_score, recall_score, accuracy_score\n",
    "from sklearn.metrics import classification_report, confusion_matrix, roc_auc_score, roc_curve, auc, precision_recall_curve, average_precision_score\n",
    "from copy import deepcopy\n",
    "\n",
    "import sys\n",
    "sys.path.append('../src')\n",
    "from utils import TimeStepSplit, plot_classification_results"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4f5240c8",
   "metadata": {},
   "source": [
    "### Load Data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "dee7be1b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>txId</th>\n",
       "      <th>class</th>\n",
       "      <th>timeStep</th>\n",
       "      <th>localF0</th>\n",
       "      <th>localF1</th>\n",
       "      <th>localF2</th>\n",
       "      <th>localF3</th>\n",
       "      <th>localF4</th>\n",
       "      <th>localF5</th>\n",
       "      <th>localF6</th>\n",
       "      <th>...</th>\n",
       "      <th>aggregatedF61</th>\n",
       "      <th>aggregatedF62</th>\n",
       "      <th>aggregatedF63</th>\n",
       "      <th>aggregatedF64</th>\n",
       "      <th>aggregatedF65</th>\n",
       "      <th>aggregatedF66</th>\n",
       "      <th>aggregatedF67</th>\n",
       "      <th>aggregatedF68</th>\n",
       "      <th>aggregatedF69</th>\n",
       "      <th>aggregatedF70</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.171469</td>\n",
       "      <td>-0.184668</td>\n",
       "      <td>-1.201369</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.562153</td>\n",
       "      <td>-0.600999</td>\n",
       "      <td>1.461330</td>\n",
       "      <td>1.461369</td>\n",
       "      <td>0.018279</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.131155</td>\n",
       "      <td>-0.097524</td>\n",
       "      <td>-0.120613</td>\n",
       "      <td>-0.119792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.171484</td>\n",
       "      <td>-0.184668</td>\n",
       "      <td>-1.201369</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>0.947382</td>\n",
       "      <td>0.673103</td>\n",
       "      <td>-0.979074</td>\n",
       "      <td>-0.978556</td>\n",
       "      <td>0.018279</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.131155</td>\n",
       "      <td>-0.097524</td>\n",
       "      <td>-0.120613</td>\n",
       "      <td>-0.119792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>-0.172107</td>\n",
       "      <td>-0.184668</td>\n",
       "      <td>-1.201369</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>0.670883</td>\n",
       "      <td>0.439728</td>\n",
       "      <td>-0.979074</td>\n",
       "      <td>-0.978556</td>\n",
       "      <td>-0.098889</td>\n",
       "      <td>-0.106715</td>\n",
       "      <td>-0.131155</td>\n",
       "      <td>-0.183671</td>\n",
       "      <td>-0.120613</td>\n",
       "      <td>-0.119792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0.163054</td>\n",
       "      <td>1.963790</td>\n",
       "      <td>-0.646376</td>\n",
       "      <td>12.409294</td>\n",
       "      <td>-0.063725</td>\n",
       "      <td>9.782742</td>\n",
       "      <td>12.414558</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.577099</td>\n",
       "      <td>-0.613614</td>\n",
       "      <td>0.241128</td>\n",
       "      <td>0.241406</td>\n",
       "      <td>1.072793</td>\n",
       "      <td>0.085530</td>\n",
       "      <td>-0.131155</td>\n",
       "      <td>0.677799</td>\n",
       "      <td>-0.120613</td>\n",
       "      <td>-0.119792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1.011523</td>\n",
       "      <td>-0.081127</td>\n",
       "      <td>-1.201369</td>\n",
       "      <td>1.153668</td>\n",
       "      <td>0.333276</td>\n",
       "      <td>1.312656</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.511871</td>\n",
       "      <td>-0.400422</td>\n",
       "      <td>0.517257</td>\n",
       "      <td>0.579382</td>\n",
       "      <td>0.018279</td>\n",
       "      <td>0.277775</td>\n",
       "      <td>0.326394</td>\n",
       "      <td>1.293750</td>\n",
       "      <td>0.178136</td>\n",
       "      <td>0.179117</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203764</th>\n",
       "      <td>203764</td>\n",
       "      <td>2</td>\n",
       "      <td>49</td>\n",
       "      <td>-0.145771</td>\n",
       "      <td>-0.163752</td>\n",
       "      <td>0.463609</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.577099</td>\n",
       "      <td>-0.613614</td>\n",
       "      <td>0.241128</td>\n",
       "      <td>0.241406</td>\n",
       "      <td>0.018279</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.131155</td>\n",
       "      <td>-0.097524</td>\n",
       "      <td>-0.120613</td>\n",
       "      <td>-0.119792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203765</th>\n",
       "      <td>203765</td>\n",
       "      <td>2</td>\n",
       "      <td>49</td>\n",
       "      <td>-0.165920</td>\n",
       "      <td>-0.123607</td>\n",
       "      <td>1.018602</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>0.162722</td>\n",
       "      <td>0.010822</td>\n",
       "      <td>1.461330</td>\n",
       "      <td>1.461369</td>\n",
       "      <td>-0.098889</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.084674</td>\n",
       "      <td>-0.140597</td>\n",
       "      <td>-1.760926</td>\n",
       "      <td>-1.760984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203766</th>\n",
       "      <td>203766</td>\n",
       "      <td>1</td>\n",
       "      <td>49</td>\n",
       "      <td>-0.172014</td>\n",
       "      <td>-0.078182</td>\n",
       "      <td>1.018602</td>\n",
       "      <td>0.028105</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>0.054722</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>1.261246</td>\n",
       "      <td>1.985050</td>\n",
       "      <td>1.461330</td>\n",
       "      <td>1.461369</td>\n",
       "      <td>0.018279</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.131155</td>\n",
       "      <td>-0.097524</td>\n",
       "      <td>-0.120613</td>\n",
       "      <td>-0.119792</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203767</th>\n",
       "      <td>203767</td>\n",
       "      <td>2</td>\n",
       "      <td>49</td>\n",
       "      <td>-0.172842</td>\n",
       "      <td>-0.176622</td>\n",
       "      <td>1.018602</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.397749</td>\n",
       "      <td>-0.411776</td>\n",
       "      <td>1.461330</td>\n",
       "      <td>1.461369</td>\n",
       "      <td>-0.098889</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.084674</td>\n",
       "      <td>-0.140597</td>\n",
       "      <td>1.519700</td>\n",
       "      <td>1.521399</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203768</th>\n",
       "      <td>203768</td>\n",
       "      <td>2</td>\n",
       "      <td>49</td>\n",
       "      <td>-0.012037</td>\n",
       "      <td>-0.132276</td>\n",
       "      <td>0.463609</td>\n",
       "      <td>-0.121970</td>\n",
       "      <td>-0.043875</td>\n",
       "      <td>-0.113002</td>\n",
       "      <td>-0.061584</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.577099</td>\n",
       "      <td>-0.613614</td>\n",
       "      <td>0.241128</td>\n",
       "      <td>0.241406</td>\n",
       "      <td>-0.098889</td>\n",
       "      <td>-0.087490</td>\n",
       "      <td>-0.084674</td>\n",
       "      <td>-0.140597</td>\n",
       "      <td>1.519700</td>\n",
       "      <td>1.521399</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>203769 rows × 168 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "          txId  class  timeStep   localF0   localF1   localF2    localF3  \\\n",
       "0            0      2         1 -0.171469 -0.184668 -1.201369  -0.121970   \n",
       "1            1      2         1 -0.171484 -0.184668 -1.201369  -0.121970   \n",
       "2            2      2         1 -0.172107 -0.184668 -1.201369  -0.121970   \n",
       "3            3      0         1  0.163054  1.963790 -0.646376  12.409294   \n",
       "4            4      2         1  1.011523 -0.081127 -1.201369   1.153668   \n",
       "...        ...    ...       ...       ...       ...       ...        ...   \n",
       "203764  203764      2        49 -0.145771 -0.163752  0.463609  -0.121970   \n",
       "203765  203765      2        49 -0.165920 -0.123607  1.018602  -0.121970   \n",
       "203766  203766      1        49 -0.172014 -0.078182  1.018602   0.028105   \n",
       "203767  203767      2        49 -0.172842 -0.176622  1.018602  -0.121970   \n",
       "203768  203768      2        49 -0.012037 -0.132276  0.463609  -0.121970   \n",
       "\n",
       "         localF4   localF5    localF6  ...  aggregatedF61  aggregatedF62  \\\n",
       "0      -0.043875 -0.113002  -0.061584  ...      -0.562153      -0.600999   \n",
       "1      -0.043875 -0.113002  -0.061584  ...       0.947382       0.673103   \n",
       "2      -0.043875 -0.113002  -0.061584  ...       0.670883       0.439728   \n",
       "3      -0.063725  9.782742  12.414558  ...      -0.577099      -0.613614   \n",
       "4       0.333276  1.312656  -0.061584  ...      -0.511871      -0.400422   \n",
       "...          ...       ...        ...  ...            ...            ...   \n",
       "203764 -0.043875 -0.113002  -0.061584  ...      -0.577099      -0.613614   \n",
       "203765 -0.043875 -0.113002  -0.061584  ...       0.162722       0.010822   \n",
       "203766 -0.043875  0.054722  -0.061584  ...       1.261246       1.985050   \n",
       "203767 -0.043875 -0.113002  -0.061584  ...      -0.397749      -0.411776   \n",
       "203768 -0.043875 -0.113002  -0.061584  ...      -0.577099      -0.613614   \n",
       "\n",
       "        aggregatedF63  aggregatedF64  aggregatedF65  aggregatedF66  \\\n",
       "0            1.461330       1.461369       0.018279      -0.087490   \n",
       "1           -0.979074      -0.978556       0.018279      -0.087490   \n",
       "2           -0.979074      -0.978556      -0.098889      -0.106715   \n",
       "3            0.241128       0.241406       1.072793       0.085530   \n",
       "4            0.517257       0.579382       0.018279       0.277775   \n",
       "...               ...            ...            ...            ...   \n",
       "203764       0.241128       0.241406       0.018279      -0.087490   \n",
       "203765       1.461330       1.461369      -0.098889      -0.087490   \n",
       "203766       1.461330       1.461369       0.018279      -0.087490   \n",
       "203767       1.461330       1.461369      -0.098889      -0.087490   \n",
       "203768       0.241128       0.241406      -0.098889      -0.087490   \n",
       "\n",
       "        aggregatedF67  aggregatedF68  aggregatedF69  aggregatedF70  \n",
       "0           -0.131155      -0.097524      -0.120613      -0.119792  \n",
       "1           -0.131155      -0.097524      -0.120613      -0.119792  \n",
       "2           -0.131155      -0.183671      -0.120613      -0.119792  \n",
       "3           -0.131155       0.677799      -0.120613      -0.119792  \n",
       "4            0.326394       1.293750       0.178136       0.179117  \n",
       "...               ...            ...            ...            ...  \n",
       "203764      -0.131155      -0.097524      -0.120613      -0.119792  \n",
       "203765      -0.084674      -0.140597      -1.760926      -1.760984  \n",
       "203766      -0.131155      -0.097524      -0.120613      -0.119792  \n",
       "203767      -0.084674      -0.140597       1.519700       1.521399  \n",
       "203768      -0.084674      -0.140597       1.519700       1.521399  \n",
       "\n",
       "[203769 rows x 168 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>txId1</th>\n",
       "      <th>txId2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>8</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234350</th>\n",
       "      <td>203602</td>\n",
       "      <td>201430</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234351</th>\n",
       "      <td>203603</td>\n",
       "      <td>203099</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234352</th>\n",
       "      <td>201921</td>\n",
       "      <td>202042</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234353</th>\n",
       "      <td>201480</td>\n",
       "      <td>201368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>234354</th>\n",
       "      <td>201954</td>\n",
       "      <td>201756</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>234355 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         txId1   txId2\n",
       "0            0       1\n",
       "1            2       3\n",
       "2            4       5\n",
       "3            6       7\n",
       "4            8       9\n",
       "...        ...     ...\n",
       "234350  203602  201430\n",
       "234351  203603  203099\n",
       "234352  201921  202042\n",
       "234353  201480  201368\n",
       "234354  201954  201756\n",
       "\n",
       "[234355 rows x 2 columns]"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_node = pd.read_csv('../data/processed/node_data.csv')\n",
    "df_edge = pd.read_csv('../data/processed/edge_data.csv')\n",
    "\n",
    "display(df_node, df_edge)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ef87dbf",
   "metadata": {},
   "source": [
    "### Train Test Split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "7e39d7fd",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Train/test mask\n",
    "train_known_mask = torch.tensor((df_node['timeStep'] <= 35) & (df_node['class'] != 2), dtype=torch.bool)\n",
    "test_known_mask = torch.tensor((df_node['timeStep'] > 35) & (df_node['class'] != 2), dtype=torch.bool)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4872098d",
   "metadata": {},
   "source": [
    "### Features & Edges"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4d57990f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# node features\n",
    "local_features = [col for col in df_node.columns if col.startswith('localF')]\n",
    "\n",
    "# edge_index\n",
    "edge_index = torch.tensor(df_edge.values.T, dtype=torch.long)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b9daf149",
   "metadata": {},
   "source": [
    "### Helper Functions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "ad4a1ff9",
   "metadata": {},
   "outputs": [],
   "source": [
    "def train(model, data, optimizer, criterion, train_mask=None):\n",
    "    model.train()\n",
    "    optimizer.zero_grad()\n",
    "    out = model(data)\n",
    "\n",
    "    if train_mask is None:\n",
    "        train_mask = data.train_mask\n",
    "    \n",
    "    loss = criterion(out[train_mask], data.y[train_mask])\n",
    "    loss.backward()\n",
    "    optimizer.step()\n",
    "    return loss.item()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "c9d20bd1",
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_best_threshold(y_true, y_probs):\n",
    "    thresholds = np.linspace(0.01, 0.99, 99)\n",
    "    best_threshold = 0.5\n",
    "    best_f1 = 0\n",
    "\n",
    "    for t in thresholds:\n",
    "        y_pred = (y_probs >= t).astype(int)\n",
    "        f1 = f1_score(y_true, y_pred, average='binary')\n",
    "        if f1 > best_f1:\n",
    "            best_f1 = f1\n",
    "            best_threshold = t\n",
    "\n",
    "    return best_threshold, best_f1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "335f02d8",
   "metadata": {},
   "outputs": [],
   "source": [
    "def evaluate(model, data, eval_mask=None):\n",
    "    model.eval()\n",
    "    with torch.no_grad():\n",
    "        out = model(data)\n",
    "        prob = F.softmax(out, dim=1)\n",
    "\n",
    "        if eval_mask is None:\n",
    "            eval_mask = data.test_mask\n",
    "\n",
    "        y_true = data.y[eval_mask].cpu().numpy()\n",
    "        y_prob = prob[eval_mask][:, 1].cpu().numpy()\n",
    "\n",
    "        # Find best threshold based on F1 score\n",
    "        best_threshold, best_f1 = find_best_threshold(y_true, y_prob)\n",
    "        y_pred = (y_prob >= best_threshold).astype(int)\n",
    "\n",
    "        precision = precision_score(y_true, y_pred, average='binary')\n",
    "        recall = recall_score(y_true, y_pred, average='binary')\n",
    "        roc_auc = roc_auc_score(y_true, y_prob)\n",
    "\n",
    "    return {\n",
    "        'f1': best_f1,\n",
    "        'precision': precision,\n",
    "        'recall': recall,\n",
    "        'roc_auc': roc_auc,\n",
    "        'threshold': best_threshold\n",
    "    }"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01a0e7d4",
   "metadata": {},
   "source": [
    "### 1-layer Simple GCN (Local Feature)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "65064ce2",
   "metadata": {},
   "outputs": [],
   "source": [
    "class GCN1(torch.nn.Module):\n",
    "    def __init__(self, input_dim, output_dim=2):\n",
    "        super(GCN1, self).__init__()\n",
    "        self.conv1 = GCNConv(input_dim, output_dim)\n",
    "\n",
    "    def forward(self, data):\n",
    "        x, edge_index = data.x, data.edge_index\n",
    "        x = self.conv1(x, edge_index)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "e891ace9",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_grid = {\n",
    "    'lr': [1e-2, 1e-3],\n",
    "    'class_weight_1': [0.75, 0.8, 0.85, 0.9, 0.95, 0.99],\n",
    "}\n",
    "\n",
    "param_combinations = list(product(*param_grid.values()))\n",
    "param_names = list(param_grid.keys())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "64a4d921",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running config: {'lr': 0.01, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6584\n",
      "Epoch 20 | Loss: 0.2328\n",
      "Epoch 40 | Loss: 0.1849\n",
      "Epoch 60 | Loss: 0.1718\n",
      "Epoch 80 | Loss: 0.1641\n",
      "Epoch 100 | Loss: 0.1584\n",
      "Epoch 120 | Loss: 0.1540\n",
      "Epoch 140 | Loss: 0.1505\n",
      "Epoch 160 | Loss: 0.1477\n",
      "Epoch 180 | Loss: 0.1453\n",
      "Epoch 200 | Loss: 0.1434\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9947\n",
      "Epoch 20 | Loss: 0.3217\n",
      "Epoch 40 | Loss: 0.2947\n",
      "Epoch 60 | Loss: 0.2818\n",
      "Epoch 80 | Loss: 0.2745\n",
      "Epoch 100 | Loss: 0.2693\n",
      "Epoch 120 | Loss: 0.2654\n",
      "Epoch 140 | Loss: 0.2625\n",
      "Epoch 160 | Loss: 0.2602\n",
      "Epoch 180 | Loss: 0.2582\n",
      "Epoch 200 | Loss: 0.2565\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.2480\n",
      "Epoch 20 | Loss: 0.3843\n",
      "Epoch 40 | Loss: 0.3430\n",
      "Epoch 60 | Loss: 0.3289\n",
      "Epoch 80 | Loss: 0.3220\n",
      "Epoch 100 | Loss: 0.3179\n",
      "Epoch 120 | Loss: 0.3149\n",
      "Epoch 140 | Loss: 0.3126\n",
      "Epoch 160 | Loss: 0.3107\n",
      "Epoch 180 | Loss: 0.3090\n",
      "Epoch 200 | Loss: 0.3075\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.6230\n",
      "Epoch 20 | Loss: 0.3607\n",
      "Epoch 40 | Loss: 0.3379\n",
      "Epoch 60 | Loss: 0.3298\n",
      "Epoch 80 | Loss: 0.3257\n",
      "Epoch 100 | Loss: 0.3228\n",
      "Epoch 120 | Loss: 0.3204\n",
      "Epoch 140 | Loss: 0.3183\n",
      "Epoch 160 | Loss: 0.3164\n",
      "Epoch 180 | Loss: 0.3146\n",
      "Epoch 200 | Loss: 0.3130\n",
      "\n",
      "Running config: {'lr': 0.01, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.4997\n",
      "Epoch 20 | Loss: 0.3109\n",
      "Epoch 40 | Loss: 0.2335\n",
      "Epoch 60 | Loss: 0.2063\n",
      "Epoch 80 | Loss: 0.1968\n",
      "Epoch 100 | Loss: 0.1908\n",
      "Epoch 120 | Loss: 0.1863\n",
      "Epoch 140 | Loss: 0.1828\n",
      "Epoch 160 | Loss: 0.1798\n",
      "Epoch 180 | Loss: 0.1772\n",
      "Epoch 200 | Loss: 0.1750\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7898\n",
      "Epoch 20 | Loss: 0.3629\n",
      "Epoch 40 | Loss: 0.3307\n",
      "Epoch 60 | Loss: 0.3157\n",
      "Epoch 80 | Loss: 0.3078\n",
      "Epoch 100 | Loss: 0.3026\n",
      "Epoch 120 | Loss: 0.2987\n",
      "Epoch 140 | Loss: 0.2954\n",
      "Epoch 160 | Loss: 0.2926\n",
      "Epoch 180 | Loss: 0.2901\n",
      "Epoch 200 | Loss: 0.2879\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.5812\n",
      "Epoch 20 | Loss: 0.4267\n",
      "Epoch 40 | Loss: 0.3665\n",
      "Epoch 60 | Loss: 0.3521\n",
      "Epoch 80 | Loss: 0.3462\n",
      "Epoch 100 | Loss: 0.3424\n",
      "Epoch 120 | Loss: 0.3394\n",
      "Epoch 140 | Loss: 0.3370\n",
      "Epoch 160 | Loss: 0.3349\n",
      "Epoch 180 | Loss: 0.3330\n",
      "Epoch 200 | Loss: 0.3313\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.4444\n",
      "Epoch 20 | Loss: 0.4072\n",
      "Epoch 40 | Loss: 0.3741\n",
      "Epoch 60 | Loss: 0.3623\n",
      "Epoch 80 | Loss: 0.3568\n",
      "Epoch 100 | Loss: 0.3531\n",
      "Epoch 120 | Loss: 0.3505\n",
      "Epoch 140 | Loss: 0.3485\n",
      "Epoch 160 | Loss: 0.3468\n",
      "Epoch 180 | Loss: 0.3452\n",
      "Epoch 200 | Loss: 0.3438\n",
      "\n",
      "Running config: {'lr': 0.01, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.4180\n",
      "Epoch 20 | Loss: 0.3051\n",
      "Epoch 40 | Loss: 0.2486\n",
      "Epoch 60 | Loss: 0.2354\n",
      "Epoch 80 | Loss: 0.2276\n",
      "Epoch 100 | Loss: 0.2219\n",
      "Epoch 120 | Loss: 0.2174\n",
      "Epoch 140 | Loss: 0.2137\n",
      "Epoch 160 | Loss: 0.2106\n",
      "Epoch 180 | Loss: 0.2079\n",
      "Epoch 200 | Loss: 0.2056\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.2293\n",
      "Epoch 20 | Loss: 0.4056\n",
      "Epoch 40 | Loss: 0.3583\n",
      "Epoch 60 | Loss: 0.3457\n",
      "Epoch 80 | Loss: 0.3390\n",
      "Epoch 100 | Loss: 0.3340\n",
      "Epoch 120 | Loss: 0.3299\n",
      "Epoch 140 | Loss: 0.3264\n",
      "Epoch 160 | Loss: 0.3232\n",
      "Epoch 180 | Loss: 0.3204\n",
      "Epoch 200 | Loss: 0.3178\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.0349\n",
      "Epoch 20 | Loss: 0.4165\n",
      "Epoch 40 | Loss: 0.3757\n",
      "Epoch 60 | Loss: 0.3648\n",
      "Epoch 80 | Loss: 0.3599\n",
      "Epoch 100 | Loss: 0.3563\n",
      "Epoch 120 | Loss: 0.3533\n",
      "Epoch 140 | Loss: 0.3507\n",
      "Epoch 160 | Loss: 0.3484\n",
      "Epoch 180 | Loss: 0.3462\n",
      "Epoch 200 | Loss: 0.3442\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.9731\n",
      "Epoch 20 | Loss: 0.4179\n",
      "Epoch 40 | Loss: 0.3805\n",
      "Epoch 60 | Loss: 0.3720\n",
      "Epoch 80 | Loss: 0.3671\n",
      "Epoch 100 | Loss: 0.3635\n",
      "Epoch 120 | Loss: 0.3605\n",
      "Epoch 140 | Loss: 0.3578\n",
      "Epoch 160 | Loss: 0.3554\n",
      "Epoch 180 | Loss: 0.3532\n",
      "Epoch 200 | Loss: 0.3512\n",
      "\n",
      "Running config: {'lr': 0.01, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.2185\n",
      "Epoch 20 | Loss: 0.3824\n",
      "Epoch 40 | Loss: 0.2946\n",
      "Epoch 60 | Loss: 0.2788\n",
      "Epoch 80 | Loss: 0.2712\n",
      "Epoch 100 | Loss: 0.2660\n",
      "Epoch 120 | Loss: 0.2619\n",
      "Epoch 140 | Loss: 0.2584\n",
      "Epoch 160 | Loss: 0.2553\n",
      "Epoch 180 | Loss: 0.2526\n",
      "Epoch 200 | Loss: 0.2500\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6761\n",
      "Epoch 20 | Loss: 0.3844\n",
      "Epoch 40 | Loss: 0.3595\n",
      "Epoch 60 | Loss: 0.3504\n",
      "Epoch 80 | Loss: 0.3444\n",
      "Epoch 100 | Loss: 0.3393\n",
      "Epoch 120 | Loss: 0.3347\n",
      "Epoch 140 | Loss: 0.3308\n",
      "Epoch 160 | Loss: 0.3275\n",
      "Epoch 180 | Loss: 0.3246\n",
      "Epoch 200 | Loss: 0.3219\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9735\n",
      "Epoch 20 | Loss: 0.4208\n",
      "Epoch 40 | Loss: 0.3839\n",
      "Epoch 60 | Loss: 0.3737\n",
      "Epoch 80 | Loss: 0.3677\n",
      "Epoch 100 | Loss: 0.3632\n",
      "Epoch 120 | Loss: 0.3593\n",
      "Epoch 140 | Loss: 0.3560\n",
      "Epoch 160 | Loss: 0.3530\n",
      "Epoch 180 | Loss: 0.3503\n",
      "Epoch 200 | Loss: 0.3479\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.0440\n",
      "Epoch 20 | Loss: 0.4147\n",
      "Epoch 40 | Loss: 0.3864\n",
      "Epoch 60 | Loss: 0.3803\n",
      "Epoch 80 | Loss: 0.3762\n",
      "Epoch 100 | Loss: 0.3731\n",
      "Epoch 120 | Loss: 0.3705\n",
      "Epoch 140 | Loss: 0.3682\n",
      "Epoch 160 | Loss: 0.3661\n",
      "Epoch 180 | Loss: 0.3641\n",
      "Epoch 200 | Loss: 0.3623\n",
      "\n",
      "Running config: {'lr': 0.01, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9293\n",
      "Epoch 20 | Loss: 0.4023\n",
      "Epoch 40 | Loss: 0.3636\n",
      "Epoch 60 | Loss: 0.3487\n",
      "Epoch 80 | Loss: 0.3410\n",
      "Epoch 100 | Loss: 0.3352\n",
      "Epoch 120 | Loss: 0.3300\n",
      "Epoch 140 | Loss: 0.3253\n",
      "Epoch 160 | Loss: 0.3208\n",
      "Epoch 180 | Loss: 0.3167\n",
      "Epoch 200 | Loss: 0.3127\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9761\n",
      "Epoch 20 | Loss: 0.3734\n",
      "Epoch 40 | Loss: 0.3544\n",
      "Epoch 60 | Loss: 0.3453\n",
      "Epoch 80 | Loss: 0.3392\n",
      "Epoch 100 | Loss: 0.3349\n",
      "Epoch 120 | Loss: 0.3313\n",
      "Epoch 140 | Loss: 0.3280\n",
      "Epoch 160 | Loss: 0.3251\n",
      "Epoch 180 | Loss: 0.3225\n",
      "Epoch 200 | Loss: 0.3201\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8171\n",
      "Epoch 20 | Loss: 0.3680\n",
      "Epoch 40 | Loss: 0.3416\n",
      "Epoch 60 | Loss: 0.3333\n",
      "Epoch 80 | Loss: 0.3292\n",
      "Epoch 100 | Loss: 0.3261\n",
      "Epoch 120 | Loss: 0.3236\n",
      "Epoch 140 | Loss: 0.3213\n",
      "Epoch 160 | Loss: 0.3194\n",
      "Epoch 180 | Loss: 0.3176\n",
      "Epoch 200 | Loss: 0.3159\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.9479\n",
      "Epoch 20 | Loss: 0.3702\n",
      "Epoch 40 | Loss: 0.3365\n",
      "Epoch 60 | Loss: 0.3285\n",
      "Epoch 80 | Loss: 0.3254\n",
      "Epoch 100 | Loss: 0.3231\n",
      "Epoch 120 | Loss: 0.3209\n",
      "Epoch 140 | Loss: 0.3189\n",
      "Epoch 160 | Loss: 0.3170\n",
      "Epoch 180 | Loss: 0.3152\n",
      "Epoch 200 | Loss: 0.3135\n",
      "\n",
      "Running config: {'lr': 0.01, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.0216\n",
      "Epoch 20 | Loss: 0.3865\n",
      "Epoch 40 | Loss: 0.3545\n",
      "Epoch 60 | Loss: 0.3416\n",
      "Epoch 80 | Loss: 0.3339\n",
      "Epoch 100 | Loss: 0.3279\n",
      "Epoch 120 | Loss: 0.3223\n",
      "Epoch 140 | Loss: 0.3171\n",
      "Epoch 160 | Loss: 0.3122\n",
      "Epoch 180 | Loss: 0.3075\n",
      "Epoch 200 | Loss: 0.3031\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7529\n",
      "Epoch 20 | Loss: 0.2313\n",
      "Epoch 40 | Loss: 0.2016\n",
      "Epoch 60 | Loss: 0.1955\n",
      "Epoch 80 | Loss: 0.1927\n",
      "Epoch 100 | Loss: 0.1903\n",
      "Epoch 120 | Loss: 0.1881\n",
      "Epoch 140 | Loss: 0.1860\n",
      "Epoch 160 | Loss: 0.1840\n",
      "Epoch 180 | Loss: 0.1822\n",
      "Epoch 200 | Loss: 0.1805\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.0056\n",
      "Epoch 20 | Loss: 0.2051\n",
      "Epoch 40 | Loss: 0.1801\n",
      "Epoch 60 | Loss: 0.1732\n",
      "Epoch 80 | Loss: 0.1685\n",
      "Epoch 100 | Loss: 0.1659\n",
      "Epoch 120 | Loss: 0.1640\n",
      "Epoch 140 | Loss: 0.1623\n",
      "Epoch 160 | Loss: 0.1608\n",
      "Epoch 180 | Loss: 0.1595\n",
      "Epoch 200 | Loss: 0.1584\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8614\n",
      "Epoch 20 | Loss: 0.2130\n",
      "Epoch 40 | Loss: 0.1756\n",
      "Epoch 60 | Loss: 0.1609\n",
      "Epoch 80 | Loss: 0.1543\n",
      "Epoch 100 | Loss: 0.1515\n",
      "Epoch 120 | Loss: 0.1500\n",
      "Epoch 140 | Loss: 0.1489\n",
      "Epoch 160 | Loss: 0.1481\n",
      "Epoch 180 | Loss: 0.1474\n",
      "Epoch 200 | Loss: 0.1467\n",
      "\n",
      "Running config: {'lr': 0.001, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6131\n",
      "Epoch 20 | Loss: 0.4895\n",
      "Epoch 40 | Loss: 0.4167\n",
      "Epoch 60 | Loss: 0.3678\n",
      "Epoch 80 | Loss: 0.3379\n",
      "Epoch 100 | Loss: 0.3176\n",
      "Epoch 120 | Loss: 0.3006\n",
      "Epoch 140 | Loss: 0.2859\n",
      "Epoch 160 | Loss: 0.2730\n",
      "Epoch 180 | Loss: 0.2618\n",
      "Epoch 200 | Loss: 0.2519\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.2724\n",
      "Epoch 20 | Loss: 0.7895\n",
      "Epoch 40 | Loss: 0.5985\n",
      "Epoch 60 | Loss: 0.5158\n",
      "Epoch 80 | Loss: 0.4690\n",
      "Epoch 100 | Loss: 0.4378\n",
      "Epoch 120 | Loss: 0.4151\n",
      "Epoch 140 | Loss: 0.3978\n",
      "Epoch 160 | Loss: 0.3842\n",
      "Epoch 180 | Loss: 0.3732\n",
      "Epoch 200 | Loss: 0.3640\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.5178\n",
      "Epoch 20 | Loss: 1.1546\n",
      "Epoch 40 | Loss: 0.8623\n",
      "Epoch 60 | Loss: 0.6338\n",
      "Epoch 80 | Loss: 0.4824\n",
      "Epoch 100 | Loss: 0.4476\n",
      "Epoch 120 | Loss: 0.4283\n",
      "Epoch 140 | Loss: 0.4136\n",
      "Epoch 160 | Loss: 0.4018\n",
      "Epoch 180 | Loss: 0.3919\n",
      "Epoch 200 | Loss: 0.3835\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.1782\n",
      "Epoch 20 | Loss: 0.7281\n",
      "Epoch 40 | Loss: 0.5809\n",
      "Epoch 60 | Loss: 0.5152\n",
      "Epoch 80 | Loss: 0.4805\n",
      "Epoch 100 | Loss: 0.4589\n",
      "Epoch 120 | Loss: 0.4427\n",
      "Epoch 140 | Loss: 0.4296\n",
      "Epoch 160 | Loss: 0.4186\n",
      "Epoch 180 | Loss: 0.4092\n",
      "Epoch 200 | Loss: 0.4009\n",
      "\n",
      "Running config: {'lr': 0.001, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.3513\n",
      "Epoch 20 | Loss: 0.7991\n",
      "Epoch 40 | Loss: 0.5760\n",
      "Epoch 60 | Loss: 0.4794\n",
      "Epoch 80 | Loss: 0.4210\n",
      "Epoch 100 | Loss: 0.3811\n",
      "Epoch 120 | Loss: 0.3515\n",
      "Epoch 140 | Loss: 0.3288\n",
      "Epoch 160 | Loss: 0.3110\n",
      "Epoch 180 | Loss: 0.2967\n",
      "Epoch 200 | Loss: 0.2851\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6884\n",
      "Epoch 20 | Loss: 0.5349\n",
      "Epoch 40 | Loss: 0.4584\n",
      "Epoch 60 | Loss: 0.4191\n",
      "Epoch 80 | Loss: 0.3969\n",
      "Epoch 100 | Loss: 0.3821\n",
      "Epoch 120 | Loss: 0.3715\n",
      "Epoch 140 | Loss: 0.3633\n",
      "Epoch 160 | Loss: 0.3566\n",
      "Epoch 180 | Loss: 0.3509\n",
      "Epoch 200 | Loss: 0.3460\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.3057\n",
      "Epoch 20 | Loss: 0.8879\n",
      "Epoch 40 | Loss: 0.6284\n",
      "Epoch 60 | Loss: 0.4948\n",
      "Epoch 80 | Loss: 0.4568\n",
      "Epoch 100 | Loss: 0.4330\n",
      "Epoch 120 | Loss: 0.4167\n",
      "Epoch 140 | Loss: 0.4052\n",
      "Epoch 160 | Loss: 0.3971\n",
      "Epoch 180 | Loss: 0.3908\n",
      "Epoch 200 | Loss: 0.3856\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.2200\n",
      "Epoch 20 | Loss: 0.8573\n",
      "Epoch 40 | Loss: 0.6769\n",
      "Epoch 60 | Loss: 0.5949\n",
      "Epoch 80 | Loss: 0.5482\n",
      "Epoch 100 | Loss: 0.5165\n",
      "Epoch 120 | Loss: 0.4923\n",
      "Epoch 140 | Loss: 0.4728\n",
      "Epoch 160 | Loss: 0.4566\n",
      "Epoch 180 | Loss: 0.4431\n",
      "Epoch 200 | Loss: 0.4316\n",
      "\n",
      "Running config: {'lr': 0.001, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9327\n",
      "Epoch 20 | Loss: 0.6766\n",
      "Epoch 40 | Loss: 0.5374\n",
      "Epoch 60 | Loss: 0.4676\n",
      "Epoch 80 | Loss: 0.4242\n",
      "Epoch 100 | Loss: 0.3918\n",
      "Epoch 120 | Loss: 0.3654\n",
      "Epoch 140 | Loss: 0.3433\n",
      "Epoch 160 | Loss: 0.3249\n",
      "Epoch 180 | Loss: 0.3101\n",
      "Epoch 200 | Loss: 0.2989\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9834\n",
      "Epoch 20 | Loss: 0.6797\n",
      "Epoch 40 | Loss: 0.5802\n",
      "Epoch 60 | Loss: 0.5267\n",
      "Epoch 80 | Loss: 0.4926\n",
      "Epoch 100 | Loss: 0.4678\n",
      "Epoch 120 | Loss: 0.4485\n",
      "Epoch 140 | Loss: 0.4329\n",
      "Epoch 160 | Loss: 0.4202\n",
      "Epoch 180 | Loss: 0.4097\n",
      "Epoch 200 | Loss: 0.4009\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.6027\n",
      "Epoch 20 | Loss: 1.0339\n",
      "Epoch 40 | Loss: 0.7287\n",
      "Epoch 60 | Loss: 0.6278\n",
      "Epoch 80 | Loss: 0.5759\n",
      "Epoch 100 | Loss: 0.5388\n",
      "Epoch 120 | Loss: 0.5113\n",
      "Epoch 140 | Loss: 0.4902\n",
      "Epoch 160 | Loss: 0.4735\n",
      "Epoch 180 | Loss: 0.4601\n",
      "Epoch 200 | Loss: 0.4490\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.5808\n",
      "Epoch 20 | Loss: 0.4994\n",
      "Epoch 40 | Loss: 0.4571\n",
      "Epoch 60 | Loss: 0.4340\n",
      "Epoch 80 | Loss: 0.4207\n",
      "Epoch 100 | Loss: 0.4118\n",
      "Epoch 120 | Loss: 0.4050\n",
      "Epoch 140 | Loss: 0.3994\n",
      "Epoch 160 | Loss: 0.3947\n",
      "Epoch 180 | Loss: 0.3909\n",
      "Epoch 200 | Loss: 0.3877\n",
      "\n",
      "Running config: {'lr': 0.001, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.2440\n",
      "Epoch 20 | Loss: 1.2927\n",
      "Epoch 40 | Loss: 0.7120\n",
      "Epoch 60 | Loss: 0.4488\n",
      "Epoch 80 | Loss: 0.4056\n",
      "Epoch 100 | Loss: 0.3852\n",
      "Epoch 120 | Loss: 0.3714\n",
      "Epoch 140 | Loss: 0.3608\n",
      "Epoch 160 | Loss: 0.3521\n",
      "Epoch 180 | Loss: 0.3447\n",
      "Epoch 200 | Loss: 0.3383\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.0609\n",
      "Epoch 20 | Loss: 0.6630\n",
      "Epoch 40 | Loss: 0.5607\n",
      "Epoch 60 | Loss: 0.5125\n",
      "Epoch 80 | Loss: 0.4817\n",
      "Epoch 100 | Loss: 0.4595\n",
      "Epoch 120 | Loss: 0.4427\n",
      "Epoch 140 | Loss: 0.4295\n",
      "Epoch 160 | Loss: 0.4189\n",
      "Epoch 180 | Loss: 0.4102\n",
      "Epoch 200 | Loss: 0.4029\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8899\n",
      "Epoch 20 | Loss: 0.6162\n",
      "Epoch 40 | Loss: 0.5463\n",
      "Epoch 60 | Loss: 0.5088\n",
      "Epoch 80 | Loss: 0.4818\n",
      "Epoch 100 | Loss: 0.4616\n",
      "Epoch 120 | Loss: 0.4464\n",
      "Epoch 140 | Loss: 0.4348\n",
      "Epoch 160 | Loss: 0.4256\n",
      "Epoch 180 | Loss: 0.4181\n",
      "Epoch 200 | Loss: 0.4119\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7418\n",
      "Epoch 20 | Loss: 0.5487\n",
      "Epoch 40 | Loss: 0.4901\n",
      "Epoch 60 | Loss: 0.4597\n",
      "Epoch 80 | Loss: 0.4399\n",
      "Epoch 100 | Loss: 0.4265\n",
      "Epoch 120 | Loss: 0.4173\n",
      "Epoch 140 | Loss: 0.4106\n",
      "Epoch 160 | Loss: 0.4057\n",
      "Epoch 180 | Loss: 0.4018\n",
      "Epoch 200 | Loss: 0.3986\n",
      "\n",
      "Running config: {'lr': 0.001, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.0298\n",
      "Epoch 20 | Loss: 0.7003\n",
      "Epoch 40 | Loss: 0.5699\n",
      "Epoch 60 | Loss: 0.5077\n",
      "Epoch 80 | Loss: 0.4740\n",
      "Epoch 100 | Loss: 0.4521\n",
      "Epoch 120 | Loss: 0.4358\n",
      "Epoch 140 | Loss: 0.4229\n",
      "Epoch 160 | Loss: 0.4124\n",
      "Epoch 180 | Loss: 0.4038\n",
      "Epoch 200 | Loss: 0.3965\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6703\n",
      "Epoch 20 | Loss: 0.5402\n",
      "Epoch 40 | Loss: 0.4811\n",
      "Epoch 60 | Loss: 0.4478\n",
      "Epoch 80 | Loss: 0.4271\n",
      "Epoch 100 | Loss: 0.4126\n",
      "Epoch 120 | Loss: 0.4019\n",
      "Epoch 140 | Loss: 0.3937\n",
      "Epoch 160 | Loss: 0.3871\n",
      "Epoch 180 | Loss: 0.3817\n",
      "Epoch 200 | Loss: 0.3771\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.5506\n",
      "Epoch 20 | Loss: 0.4424\n",
      "Epoch 40 | Loss: 0.4084\n",
      "Epoch 60 | Loss: 0.3899\n",
      "Epoch 80 | Loss: 0.3779\n",
      "Epoch 100 | Loss: 0.3693\n",
      "Epoch 120 | Loss: 0.3628\n",
      "Epoch 140 | Loss: 0.3578\n",
      "Epoch 160 | Loss: 0.3537\n",
      "Epoch 180 | Loss: 0.3505\n",
      "Epoch 200 | Loss: 0.3478\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.1140\n",
      "Epoch 20 | Loss: 0.7461\n",
      "Epoch 40 | Loss: 0.5897\n",
      "Epoch 60 | Loss: 0.5321\n",
      "Epoch 80 | Loss: 0.4952\n",
      "Epoch 100 | Loss: 0.4680\n",
      "Epoch 120 | Loss: 0.4471\n",
      "Epoch 140 | Loss: 0.4302\n",
      "Epoch 160 | Loss: 0.4162\n",
      "Epoch 180 | Loss: 0.4044\n",
      "Epoch 200 | Loss: 0.3943\n",
      "\n",
      "Running config: {'lr': 0.001, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6000\n",
      "Epoch 20 | Loss: 0.4684\n",
      "Epoch 40 | Loss: 0.4158\n",
      "Epoch 60 | Loss: 0.3936\n",
      "Epoch 80 | Loss: 0.3823\n",
      "Epoch 100 | Loss: 0.3751\n",
      "Epoch 120 | Loss: 0.3699\n",
      "Epoch 140 | Loss: 0.3659\n",
      "Epoch 160 | Loss: 0.3626\n",
      "Epoch 180 | Loss: 0.3597\n",
      "Epoch 200 | Loss: 0.3572\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6034\n",
      "Epoch 20 | Loss: 0.4115\n",
      "Epoch 40 | Loss: 0.3248\n",
      "Epoch 60 | Loss: 0.2853\n",
      "Epoch 80 | Loss: 0.2641\n",
      "Epoch 100 | Loss: 0.2508\n",
      "Epoch 120 | Loss: 0.2415\n",
      "Epoch 140 | Loss: 0.2345\n",
      "Epoch 160 | Loss: 0.2291\n",
      "Epoch 180 | Loss: 0.2248\n",
      "Epoch 200 | Loss: 0.2212\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.7720\n",
      "Epoch 20 | Loss: 0.5361\n",
      "Epoch 40 | Loss: 0.4072\n",
      "Epoch 60 | Loss: 0.3383\n",
      "Epoch 80 | Loss: 0.2973\n",
      "Epoch 100 | Loss: 0.2687\n",
      "Epoch 120 | Loss: 0.2479\n",
      "Epoch 140 | Loss: 0.2322\n",
      "Epoch 160 | Loss: 0.2204\n",
      "Epoch 180 | Loss: 0.2113\n",
      "Epoch 200 | Loss: 0.2042\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.9523\n",
      "Epoch 20 | Loss: 0.6405\n",
      "Epoch 40 | Loss: 0.4613\n",
      "Epoch 60 | Loss: 0.3709\n",
      "Epoch 80 | Loss: 0.3253\n",
      "Epoch 100 | Loss: 0.2974\n",
      "Epoch 120 | Loss: 0.2764\n",
      "Epoch 140 | Loss: 0.2597\n",
      "Epoch 160 | Loss: 0.2459\n",
      "Epoch 180 | Loss: 0.2345\n",
      "Epoch 200 | Loss: 0.2248\n",
      "\n",
      "Best Params: {'lr': 0.01, 'class_weight_1': 0.99}\n",
      "Best Avg CV Metrics:\n",
      "f1: 0.5644\n",
      "precision: 0.4566\n",
      "recall: 0.7807\n",
      "roc_auc: 0.8595\n",
      "threshold: 0.8925\n"
     ]
    }
   ],
   "source": [
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "x_loc = torch.tensor(df_node[local_features].values, dtype=torch.float)\n",
    "y = torch.tensor(df_node['class'].values, dtype=torch.long)\n",
    "\n",
    "# PyG data object\n",
    "data = Data(x=x_loc, edge_index=edge_index, y=y, train_mask=train_known_mask, test_mask=test_known_mask)\n",
    "data = data.to(device)\n",
    "\n",
    "train_df = df_node[(df_node['timeStep'] <= 35) & (df_node['class']!=2)]\n",
    "cv = TimeStepSplit(train_df, n_splits=4)\n",
    "\n",
    "best_rocauc = 0\n",
    "best_params = None\n",
    "best_metrics = None\n",
    "\n",
    "for param_values in param_combinations:\n",
    "    params = dict(zip(param_names, param_values))\n",
    "    fold_scores = []\n",
    "    print(f\"\\nRunning config: {params}\")\n",
    "\n",
    "    for fold_idx, (train_idx, val_idx) in enumerate(cv.split(train_df), start=1):\n",
    "        print(f\"Fold {fold_idx}/{cv.get_n_splits()}\")\n",
    "\n",
    "        # Define new masks temporarily for this fold\n",
    "        fold_train_mask = torch.zeros(data.num_nodes, dtype=torch.bool)\n",
    "        fold_val_mask = torch.zeros(data.num_nodes, dtype=torch.bool)\n",
    "        fold_train_mask[train_idx] = True\n",
    "        fold_val_mask[val_idx] = True\n",
    "\n",
    "        model = GCN1(input_dim=data.x.shape[1]).to(device)\n",
    "        optimizer = torch.optim.Adam(model.parameters(), lr=params['lr'], weight_decay=5e-4)\n",
    "\n",
    "        class_weights = torch.tensor([1-params['class_weight_1'], params['class_weight_1']],dtype=torch.float)\n",
    "        criterion = nn.CrossEntropyLoss(weight=class_weights.to(device), ignore_index=2)\n",
    "\n",
    "        # Training loop\n",
    "        for epoch in range(201):\n",
    "            loss = train(model, data, optimizer, criterion, train_mask=fold_train_mask)\n",
    "            if epoch % 20 == 0:\n",
    "                print(f\"Epoch {epoch} | Loss: {loss:.4f}\")\n",
    "\n",
    "        # Validation\n",
    "        metrics = evaluate(model, data, eval_mask=fold_val_mask)\n",
    "        fold_scores.append(metrics)\n",
    "\n",
    "    avg_metrics = {k: sum(d[k] for d in fold_scores) / len(fold_scores) for k in fold_scores[0]}\n",
    "\n",
    "    if avg_metrics['roc_auc'] > best_rocauc:\n",
    "        best_rocauc = avg_metrics['roc_auc']\n",
    "        best_params = deepcopy(params)\n",
    "        best_metrics = deepcopy(avg_metrics)\n",
    "\n",
    "print(f\"\\nBest Params: {best_params}\")\n",
    "print(\"Best Avg CV Metrics:\")\n",
    "for k, v in best_metrics.items():\n",
    "    print(f\"{k}: {v:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "05e67939",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 0 | Loss: 0.9627\n",
      "Epoch 100 | Loss: 0.1509\n",
      "Epoch 200 | Loss: 0.1417\n",
      "Epoch 300 | Loss: 0.1384\n",
      "Epoch 400 | Loss: 0.1365\n",
      "Epoch 500 | Loss: 0.1350\n",
      "Epoch 600 | Loss: 0.1339\n",
      "Epoch 700 | Loss: 0.1330\n",
      "Epoch 800 | Loss: 0.1324\n",
      "Epoch 900 | Loss: 0.1319\n",
      "Epoch 1000 | Loss: 0.1315\n",
      "\n",
      "Final Test Set Metrics:\n",
      "f1: 0.2186\n",
      "precision: 0.1255\n",
      "recall: 0.8446\n",
      "roc_auc: 0.7688\n",
      "threshold: 0.7200\n"
     ]
    }
   ],
   "source": [
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "\n",
    "x_loc = torch.tensor(df_node[local_features].values, dtype=torch.float)\n",
    "y = torch.tensor(df_node['class'].values, dtype=torch.long)\n",
    "\n",
    "# PyG data object\n",
    "data = Data(x=x_loc, edge_index=edge_index, y=y, train_mask=train_known_mask, test_mask=test_known_mask)\n",
    "data = data.to(device)\n",
    "\n",
    "model1 = GCN1(input_dim=x_loc.shape[1]).to(device)\n",
    "\n",
    "class_weights = torch.tensor([1-best_params['class_weight_1'], best_params['class_weight_1']],dtype=torch.float)\n",
    "criterion = nn.CrossEntropyLoss(weight=class_weights.to(device), ignore_index=2)\n",
    "\n",
    "optimizer = torch.optim.Adam(model1.parameters(), lr=best_params['lr'], weight_decay=5e-4)\n",
    "\n",
    "# Train\n",
    "for epoch in range(1001):\n",
    "    loss = train(model1, data, optimizer, criterion, train_mask=train_known_mask)\n",
    "    \n",
    "    if epoch % 100 == 0:\n",
    "        print(f\"Epoch {epoch} | Loss: {loss:.4f}\")\n",
    "\n",
    "final_metrics = evaluate(model, data, eval_mask=test_known_mask)\n",
    "print(\"\\nFinal Test Set Metrics:\")\n",
    "for k, v in final_metrics.items():\n",
    "    print(f\"{k}: {v:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "7d0ff12d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x1200 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       licit       0.99      0.51      0.67     14428\n",
      "     illicit       0.11      0.93      0.19       901\n",
      "\n",
      "    accuracy                           0.54     15329\n",
      "   macro avg       0.55      0.72      0.43     15329\n",
      "weighted avg       0.94      0.54      0.65     15329\n",
      "\n",
      "ROC AUC: 0.778031\n"
     ]
    }
   ],
   "source": [
    "model1.eval()\n",
    "with torch.no_grad():\n",
    "    logits = model1(data)\n",
    "    prob = F.softmax(logits, dim=1)[:, 1]\n",
    "\n",
    "y_test = data.y[data.test_mask].cpu().numpy()\n",
    "y_prob = prob[data.test_mask].cpu().numpy()\n",
    "y_pred = (y_prob >= metrics['threshold']).astype(int)\n",
    "\n",
    "plot_classification_results(y_test, y_prob, y_pred, '1-layer GCN (Local Features)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a638155f",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a83fc2d2",
   "metadata": {},
   "source": [
    "### 2-layer GCN (Local Features)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "92bcefa3",
   "metadata": {},
   "outputs": [],
   "source": [
    "class GCN2(nn.Module):\n",
    "    def __init__(self, input_dim, hidden_dim, dropout, output_dim=2):\n",
    "        super(GCN2, self).__init__()\n",
    "        self.conv1 = GCNConv(input_dim, hidden_dim)\n",
    "        self.conv2 = GCNConv(hidden_dim, output_dim)\n",
    "        self.dropout = dropout\n",
    "\n",
    "    def forward(self, data):\n",
    "        x, edge_index = data.x, data.edge_index\n",
    "        x = F.relu(self.conv1(x, edge_index))\n",
    "        x = F.dropout(x, p=self.dropout, training=self.training)\n",
    "        x = self.conv2(x, edge_index)\n",
    "        return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "c4f1a436",
   "metadata": {},
   "outputs": [],
   "source": [
    "param_grid = {\n",
    "    'hidden_dim': [32, 64],\n",
    "    'lr': [1e-2, 1e-3],\n",
    "    'dropout': [0, 0.3],\n",
    "    'class_weight_1': [0.75, 0.8, 0.85, 0.9, 0.95, 0.99],\n",
    "}\n",
    "\n",
    "param_combinations = list(product(*param_grid.values()))\n",
    "param_names = list(param_grid.keys())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "7bc89879",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9794\n",
      "Epoch 20 | Loss: 0.1506\n",
      "Epoch 40 | Loss: 0.1278\n",
      "Epoch 60 | Loss: 0.1162\n",
      "Epoch 80 | Loss: 0.1074\n",
      "Epoch 100 | Loss: 0.1001\n",
      "Epoch 120 | Loss: 0.0937\n",
      "Epoch 140 | Loss: 0.0884\n",
      "Epoch 160 | Loss: 0.0832\n",
      "Epoch 180 | Loss: 0.0786\n",
      "Epoch 200 | Loss: 0.0744\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 2.7651\n",
      "Epoch 20 | Loss: 0.2724\n",
      "Epoch 40 | Loss: 0.2314\n",
      "Epoch 60 | Loss: 0.2128\n",
      "Epoch 80 | Loss: 0.2022\n",
      "Epoch 100 | Loss: 0.1945\n",
      "Epoch 120 | Loss: 0.1886\n",
      "Epoch 140 | Loss: 0.1831\n",
      "Epoch 160 | Loss: 0.1783\n",
      "Epoch 180 | Loss: 0.1740\n",
      "Epoch 200 | Loss: 0.1703\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.9452\n",
      "Epoch 20 | Loss: 0.3116\n",
      "Epoch 40 | Loss: 0.2772\n",
      "Epoch 60 | Loss: 0.2600\n",
      "Epoch 80 | Loss: 0.2495\n",
      "Epoch 100 | Loss: 0.2415\n",
      "Epoch 120 | Loss: 0.2355\n",
      "Epoch 140 | Loss: 0.2304\n",
      "Epoch 160 | Loss: 0.2255\n",
      "Epoch 180 | Loss: 0.2210\n",
      "Epoch 200 | Loss: 0.2166\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 3.0064\n",
      "Epoch 20 | Loss: 0.3322\n",
      "Epoch 40 | Loss: 0.2924\n",
      "Epoch 60 | Loss: 0.2759\n",
      "Epoch 80 | Loss: 0.2661\n",
      "Epoch 100 | Loss: 0.2578\n",
      "Epoch 120 | Loss: 0.2507\n",
      "Epoch 140 | Loss: 0.2445\n",
      "Epoch 160 | Loss: 0.2389\n",
      "Epoch 180 | Loss: 0.2334\n",
      "Epoch 200 | Loss: 0.2286\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6687\n",
      "Epoch 20 | Loss: 0.1627\n",
      "Epoch 40 | Loss: 0.1419\n",
      "Epoch 60 | Loss: 0.1286\n",
      "Epoch 80 | Loss: 0.1176\n",
      "Epoch 100 | Loss: 0.1086\n",
      "Epoch 120 | Loss: 0.1012\n",
      "Epoch 140 | Loss: 0.0947\n",
      "Epoch 160 | Loss: 0.0888\n",
      "Epoch 180 | Loss: 0.0836\n",
      "Epoch 200 | Loss: 0.0788\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.4373\n",
      "Epoch 20 | Loss: 0.2848\n",
      "Epoch 40 | Loss: 0.2454\n",
      "Epoch 60 | Loss: 0.2290\n",
      "Epoch 80 | Loss: 0.2175\n",
      "Epoch 100 | Loss: 0.2080\n",
      "Epoch 120 | Loss: 0.2000\n",
      "Epoch 140 | Loss: 0.1928\n",
      "Epoch 160 | Loss: 0.1866\n",
      "Epoch 180 | Loss: 0.1812\n",
      "Epoch 200 | Loss: 0.1765\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.7195\n",
      "Epoch 20 | Loss: 0.3019\n",
      "Epoch 40 | Loss: 0.2684\n",
      "Epoch 60 | Loss: 0.2493\n",
      "Epoch 80 | Loss: 0.2361\n",
      "Epoch 100 | Loss: 0.2253\n",
      "Epoch 120 | Loss: 0.2163\n",
      "Epoch 140 | Loss: 0.2084\n",
      "Epoch 160 | Loss: 0.2014\n",
      "Epoch 180 | Loss: 0.1960\n",
      "Epoch 200 | Loss: 0.1907\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8418\n",
      "Epoch 20 | Loss: 0.3092\n",
      "Epoch 40 | Loss: 0.2790\n",
      "Epoch 60 | Loss: 0.2627\n",
      "Epoch 80 | Loss: 0.2502\n",
      "Epoch 100 | Loss: 0.2409\n",
      "Epoch 120 | Loss: 0.2333\n",
      "Epoch 140 | Loss: 0.2271\n",
      "Epoch 160 | Loss: 0.2220\n",
      "Epoch 180 | Loss: 0.2175\n",
      "Epoch 200 | Loss: 0.2130\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.4920\n",
      "Epoch 20 | Loss: 0.1821\n",
      "Epoch 40 | Loss: 0.1558\n",
      "Epoch 60 | Loss: 0.1391\n",
      "Epoch 80 | Loss: 0.1257\n",
      "Epoch 100 | Loss: 0.1132\n",
      "Epoch 120 | Loss: 0.1020\n",
      "Epoch 140 | Loss: 0.0920\n",
      "Epoch 160 | Loss: 0.0838\n",
      "Epoch 180 | Loss: 0.0777\n",
      "Epoch 200 | Loss: 0.0728\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 2.4308\n",
      "Epoch 20 | Loss: 0.3187\n",
      "Epoch 40 | Loss: 0.2773\n",
      "Epoch 60 | Loss: 0.2566\n",
      "Epoch 80 | Loss: 0.2418\n",
      "Epoch 100 | Loss: 0.2301\n",
      "Epoch 120 | Loss: 0.2199\n",
      "Epoch 140 | Loss: 0.2114\n",
      "Epoch 160 | Loss: 0.2046\n",
      "Epoch 180 | Loss: 0.1986\n",
      "Epoch 200 | Loss: 0.1934\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.1387\n",
      "Epoch 20 | Loss: 0.3323\n",
      "Epoch 40 | Loss: 0.2913\n",
      "Epoch 60 | Loss: 0.2710\n",
      "Epoch 80 | Loss: 0.2568\n",
      "Epoch 100 | Loss: 0.2455\n",
      "Epoch 120 | Loss: 0.2368\n",
      "Epoch 140 | Loss: 0.2297\n",
      "Epoch 160 | Loss: 0.2237\n",
      "Epoch 180 | Loss: 0.2185\n",
      "Epoch 200 | Loss: 0.2132\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.9105\n",
      "Epoch 20 | Loss: 0.3553\n",
      "Epoch 40 | Loss: 0.3138\n",
      "Epoch 60 | Loss: 0.2944\n",
      "Epoch 80 | Loss: 0.2831\n",
      "Epoch 100 | Loss: 0.2744\n",
      "Epoch 120 | Loss: 0.2669\n",
      "Epoch 140 | Loss: 0.2596\n",
      "Epoch 160 | Loss: 0.2528\n",
      "Epoch 180 | Loss: 0.2463\n",
      "Epoch 200 | Loss: 0.2402\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.8120\n",
      "Epoch 20 | Loss: 0.2528\n",
      "Epoch 40 | Loss: 0.2142\n",
      "Epoch 60 | Loss: 0.1925\n",
      "Epoch 80 | Loss: 0.1765\n",
      "Epoch 100 | Loss: 0.1631\n",
      "Epoch 120 | Loss: 0.1510\n",
      "Epoch 140 | Loss: 0.1398\n",
      "Epoch 160 | Loss: 0.1299\n",
      "Epoch 180 | Loss: 0.1201\n",
      "Epoch 200 | Loss: 0.1117\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6944\n",
      "Epoch 20 | Loss: 0.2953\n",
      "Epoch 40 | Loss: 0.2601\n",
      "Epoch 60 | Loss: 0.2379\n",
      "Epoch 80 | Loss: 0.2215\n",
      "Epoch 100 | Loss: 0.2077\n",
      "Epoch 120 | Loss: 0.1960\n",
      "Epoch 140 | Loss: 0.1859\n",
      "Epoch 160 | Loss: 0.1776\n",
      "Epoch 180 | Loss: 0.1702\n",
      "Epoch 200 | Loss: 0.1644\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 2.2807\n",
      "Epoch 20 | Loss: 0.3648\n",
      "Epoch 40 | Loss: 0.3092\n",
      "Epoch 60 | Loss: 0.2857\n",
      "Epoch 80 | Loss: 0.2691\n",
      "Epoch 100 | Loss: 0.2578\n",
      "Epoch 120 | Loss: 0.2490\n",
      "Epoch 140 | Loss: 0.2414\n",
      "Epoch 160 | Loss: 0.2348\n",
      "Epoch 180 | Loss: 0.2285\n",
      "Epoch 200 | Loss: 0.2230\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7688\n",
      "Epoch 20 | Loss: 0.3358\n",
      "Epoch 40 | Loss: 0.3003\n",
      "Epoch 60 | Loss: 0.2775\n",
      "Epoch 80 | Loss: 0.2592\n",
      "Epoch 100 | Loss: 0.2440\n",
      "Epoch 120 | Loss: 0.2313\n",
      "Epoch 140 | Loss: 0.2220\n",
      "Epoch 160 | Loss: 0.2150\n",
      "Epoch 180 | Loss: 0.2107\n",
      "Epoch 200 | Loss: 0.2050\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.5193\n",
      "Epoch 20 | Loss: 0.2507\n",
      "Epoch 40 | Loss: 0.1885\n",
      "Epoch 60 | Loss: 0.1478\n",
      "Epoch 80 | Loss: 0.1202\n",
      "Epoch 100 | Loss: 0.1041\n",
      "Epoch 120 | Loss: 0.0934\n",
      "Epoch 140 | Loss: 0.0848\n",
      "Epoch 160 | Loss: 0.0786\n",
      "Epoch 180 | Loss: 0.0711\n",
      "Epoch 200 | Loss: 0.0673\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7402\n",
      "Epoch 20 | Loss: 0.3191\n",
      "Epoch 40 | Loss: 0.2689\n",
      "Epoch 60 | Loss: 0.2363\n",
      "Epoch 80 | Loss: 0.2126\n",
      "Epoch 100 | Loss: 0.1951\n",
      "Epoch 120 | Loss: 0.1817\n",
      "Epoch 140 | Loss: 0.1711\n",
      "Epoch 160 | Loss: 0.1628\n",
      "Epoch 180 | Loss: 0.1560\n",
      "Epoch 200 | Loss: 0.1510\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.0813\n",
      "Epoch 20 | Loss: 0.3185\n",
      "Epoch 40 | Loss: 0.2776\n",
      "Epoch 60 | Loss: 0.2555\n",
      "Epoch 80 | Loss: 0.2400\n",
      "Epoch 100 | Loss: 0.2283\n",
      "Epoch 120 | Loss: 0.2192\n",
      "Epoch 140 | Loss: 0.2110\n",
      "Epoch 160 | Loss: 0.2031\n",
      "Epoch 180 | Loss: 0.1965\n",
      "Epoch 200 | Loss: 0.1903\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7044\n",
      "Epoch 20 | Loss: 0.3088\n",
      "Epoch 40 | Loss: 0.2730\n",
      "Epoch 60 | Loss: 0.2473\n",
      "Epoch 80 | Loss: 0.2253\n",
      "Epoch 100 | Loss: 0.2107\n",
      "Epoch 120 | Loss: 0.2008\n",
      "Epoch 140 | Loss: 0.1933\n",
      "Epoch 160 | Loss: 0.1870\n",
      "Epoch 180 | Loss: 0.1818\n",
      "Epoch 200 | Loss: 0.1759\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9829\n",
      "Epoch 20 | Loss: 0.2927\n",
      "Epoch 40 | Loss: 0.2268\n",
      "Epoch 60 | Loss: 0.1867\n",
      "Epoch 80 | Loss: 0.1566\n",
      "Epoch 100 | Loss: 0.1351\n",
      "Epoch 120 | Loss: 0.1188\n",
      "Epoch 140 | Loss: 0.1060\n",
      "Epoch 160 | Loss: 0.0954\n",
      "Epoch 180 | Loss: 0.0872\n",
      "Epoch 200 | Loss: 0.0800\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.8413\n",
      "Epoch 20 | Loss: 0.2037\n",
      "Epoch 40 | Loss: 0.1671\n",
      "Epoch 60 | Loss: 0.1444\n",
      "Epoch 80 | Loss: 0.1268\n",
      "Epoch 100 | Loss: 0.1146\n",
      "Epoch 120 | Loss: 0.1051\n",
      "Epoch 140 | Loss: 0.0988\n",
      "Epoch 160 | Loss: 0.0942\n",
      "Epoch 180 | Loss: 0.0906\n",
      "Epoch 200 | Loss: 0.0878\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.6767\n",
      "Epoch 20 | Loss: 0.1700\n",
      "Epoch 40 | Loss: 0.1431\n",
      "Epoch 60 | Loss: 0.1320\n",
      "Epoch 80 | Loss: 0.1230\n",
      "Epoch 100 | Loss: 0.1159\n",
      "Epoch 120 | Loss: 0.1103\n",
      "Epoch 140 | Loss: 0.1061\n",
      "Epoch 160 | Loss: 0.1028\n",
      "Epoch 180 | Loss: 0.1000\n",
      "Epoch 200 | Loss: 0.0974\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.9967\n",
      "Epoch 20 | Loss: 0.1884\n",
      "Epoch 40 | Loss: 0.1614\n",
      "Epoch 60 | Loss: 0.1496\n",
      "Epoch 80 | Loss: 0.1401\n",
      "Epoch 100 | Loss: 0.1314\n",
      "Epoch 120 | Loss: 0.1234\n",
      "Epoch 140 | Loss: 0.1165\n",
      "Epoch 160 | Loss: 0.1115\n",
      "Epoch 180 | Loss: 0.1079\n",
      "Epoch 200 | Loss: 0.1050\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.8394\n",
      "Epoch 20 | Loss: 0.1499\n",
      "Epoch 40 | Loss: 0.1319\n",
      "Epoch 60 | Loss: 0.1211\n",
      "Epoch 80 | Loss: 0.1185\n",
      "Epoch 100 | Loss: 0.1136\n",
      "Epoch 120 | Loss: 0.1075\n",
      "Epoch 140 | Loss: 0.1043\n",
      "Epoch 160 | Loss: 0.0996\n",
      "Epoch 180 | Loss: 0.0981\n",
      "Epoch 200 | Loss: 0.0971\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.6912\n",
      "Epoch 20 | Loss: 0.2809\n",
      "Epoch 40 | Loss: 0.2482\n",
      "Epoch 60 | Loss: 0.2313\n",
      "Epoch 80 | Loss: 0.2199\n",
      "Epoch 100 | Loss: 0.2190\n",
      "Epoch 120 | Loss: 0.2091\n",
      "Epoch 140 | Loss: 0.2038\n",
      "Epoch 160 | Loss: 0.2015\n",
      "Epoch 180 | Loss: 0.2002\n",
      "Epoch 200 | Loss: 0.1931\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8588\n",
      "Epoch 20 | Loss: 0.3063\n",
      "Epoch 40 | Loss: 0.2760\n",
      "Epoch 60 | Loss: 0.2634\n",
      "Epoch 80 | Loss: 0.2533\n",
      "Epoch 100 | Loss: 0.2466\n",
      "Epoch 120 | Loss: 0.2410\n",
      "Epoch 140 | Loss: 0.2388\n",
      "Epoch 160 | Loss: 0.2356\n",
      "Epoch 180 | Loss: 0.2293\n",
      "Epoch 200 | Loss: 0.2295\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.2207\n",
      "Epoch 20 | Loss: 0.3265\n",
      "Epoch 40 | Loss: 0.2933\n",
      "Epoch 60 | Loss: 0.2765\n",
      "Epoch 80 | Loss: 0.2683\n",
      "Epoch 100 | Loss: 0.2556\n",
      "Epoch 120 | Loss: 0.2562\n",
      "Epoch 140 | Loss: 0.2498\n",
      "Epoch 160 | Loss: 0.2505\n",
      "Epoch 180 | Loss: 0.2427\n",
      "Epoch 200 | Loss: 0.2388\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6967\n",
      "Epoch 20 | Loss: 0.1760\n",
      "Epoch 40 | Loss: 0.1508\n",
      "Epoch 60 | Loss: 0.1425\n",
      "Epoch 80 | Loss: 0.1348\n",
      "Epoch 100 | Loss: 0.1249\n",
      "Epoch 120 | Loss: 0.1209\n",
      "Epoch 140 | Loss: 0.1160\n",
      "Epoch 160 | Loss: 0.1107\n",
      "Epoch 180 | Loss: 0.1113\n",
      "Epoch 200 | Loss: 0.0997\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.2135\n",
      "Epoch 20 | Loss: 0.2984\n",
      "Epoch 40 | Loss: 0.2654\n",
      "Epoch 60 | Loss: 0.2432\n",
      "Epoch 80 | Loss: 0.2319\n",
      "Epoch 100 | Loss: 0.2255\n",
      "Epoch 120 | Loss: 0.2160\n",
      "Epoch 140 | Loss: 0.2107\n",
      "Epoch 160 | Loss: 0.2037\n",
      "Epoch 180 | Loss: 0.2026\n",
      "Epoch 200 | Loss: 0.1975\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.0560\n",
      "Epoch 20 | Loss: 0.3384\n",
      "Epoch 40 | Loss: 0.3015\n",
      "Epoch 60 | Loss: 0.2834\n",
      "Epoch 80 | Loss: 0.2750\n",
      "Epoch 100 | Loss: 0.2677\n",
      "Epoch 120 | Loss: 0.2555\n",
      "Epoch 140 | Loss: 0.2544\n",
      "Epoch 160 | Loss: 0.2505\n",
      "Epoch 180 | Loss: 0.2482\n",
      "Epoch 200 | Loss: 0.2438\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.3904\n",
      "Epoch 20 | Loss: 0.3479\n",
      "Epoch 40 | Loss: 0.3122\n",
      "Epoch 60 | Loss: 0.2978\n",
      "Epoch 80 | Loss: 0.2883\n",
      "Epoch 100 | Loss: 0.2805\n",
      "Epoch 120 | Loss: 0.2749\n",
      "Epoch 140 | Loss: 0.2655\n",
      "Epoch 160 | Loss: 0.2643\n",
      "Epoch 180 | Loss: 0.2605\n",
      "Epoch 200 | Loss: 0.2572\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.9515\n",
      "Epoch 20 | Loss: 0.2381\n",
      "Epoch 40 | Loss: 0.1952\n",
      "Epoch 60 | Loss: 0.1828\n",
      "Epoch 80 | Loss: 0.1707\n",
      "Epoch 100 | Loss: 0.1645\n",
      "Epoch 120 | Loss: 0.1583\n",
      "Epoch 140 | Loss: 0.1445\n",
      "Epoch 160 | Loss: 0.1453\n",
      "Epoch 180 | Loss: 0.1398\n",
      "Epoch 200 | Loss: 0.1361\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.6850\n",
      "Epoch 20 | Loss: 0.3242\n",
      "Epoch 40 | Loss: 0.2935\n",
      "Epoch 60 | Loss: 0.2701\n",
      "Epoch 80 | Loss: 0.2569\n",
      "Epoch 100 | Loss: 0.2546\n",
      "Epoch 120 | Loss: 0.2519\n",
      "Epoch 140 | Loss: 0.2348\n",
      "Epoch 160 | Loss: 0.2339\n",
      "Epoch 180 | Loss: 0.2281\n",
      "Epoch 200 | Loss: 0.2267\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.2834\n",
      "Epoch 20 | Loss: 0.3712\n",
      "Epoch 40 | Loss: 0.3236\n",
      "Epoch 60 | Loss: 0.2981\n",
      "Epoch 80 | Loss: 0.2887\n",
      "Epoch 100 | Loss: 0.2792\n",
      "Epoch 120 | Loss: 0.2704\n",
      "Epoch 140 | Loss: 0.2654\n",
      "Epoch 160 | Loss: 0.2580\n",
      "Epoch 180 | Loss: 0.2571\n",
      "Epoch 200 | Loss: 0.2512\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.4910\n",
      "Epoch 20 | Loss: 0.3749\n",
      "Epoch 40 | Loss: 0.3452\n",
      "Epoch 60 | Loss: 0.3170\n",
      "Epoch 80 | Loss: 0.3055\n",
      "Epoch 100 | Loss: 0.2907\n",
      "Epoch 120 | Loss: 0.2840\n",
      "Epoch 140 | Loss: 0.2794\n",
      "Epoch 160 | Loss: 0.2723\n",
      "Epoch 180 | Loss: 0.2703\n",
      "Epoch 200 | Loss: 0.2635\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.6754\n",
      "Epoch 20 | Loss: 0.2612\n",
      "Epoch 40 | Loss: 0.2364\n",
      "Epoch 60 | Loss: 0.2176\n",
      "Epoch 80 | Loss: 0.2064\n",
      "Epoch 100 | Loss: 0.1901\n",
      "Epoch 120 | Loss: 0.1827\n",
      "Epoch 140 | Loss: 0.1753\n",
      "Epoch 160 | Loss: 0.1662\n",
      "Epoch 180 | Loss: 0.1621\n",
      "Epoch 200 | Loss: 0.1591\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.3032\n",
      "Epoch 20 | Loss: 0.3477\n",
      "Epoch 40 | Loss: 0.3015\n",
      "Epoch 60 | Loss: 0.2814\n",
      "Epoch 80 | Loss: 0.2666\n",
      "Epoch 100 | Loss: 0.2502\n",
      "Epoch 120 | Loss: 0.2440\n",
      "Epoch 140 | Loss: 0.2392\n",
      "Epoch 160 | Loss: 0.2358\n",
      "Epoch 180 | Loss: 0.2289\n",
      "Epoch 200 | Loss: 0.2200\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.6284\n",
      "Epoch 20 | Loss: 0.3384\n",
      "Epoch 40 | Loss: 0.3042\n",
      "Epoch 60 | Loss: 0.2834\n",
      "Epoch 80 | Loss: 0.2750\n",
      "Epoch 100 | Loss: 0.2662\n",
      "Epoch 120 | Loss: 0.2522\n",
      "Epoch 140 | Loss: 0.2437\n",
      "Epoch 160 | Loss: 0.2404\n",
      "Epoch 180 | Loss: 0.2382\n",
      "Epoch 200 | Loss: 0.2360\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.9229\n",
      "Epoch 20 | Loss: 0.3674\n",
      "Epoch 40 | Loss: 0.3312\n",
      "Epoch 60 | Loss: 0.3147\n",
      "Epoch 80 | Loss: 0.2968\n",
      "Epoch 100 | Loss: 0.2914\n",
      "Epoch 120 | Loss: 0.2856\n",
      "Epoch 140 | Loss: 0.2777\n",
      "Epoch 160 | Loss: 0.2735\n",
      "Epoch 180 | Loss: 0.2636\n",
      "Epoch 200 | Loss: 0.2591\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.7457\n",
      "Epoch 20 | Loss: 0.3582\n",
      "Epoch 40 | Loss: 0.2961\n",
      "Epoch 60 | Loss: 0.2677\n",
      "Epoch 80 | Loss: 0.2554\n",
      "Epoch 100 | Loss: 0.2261\n",
      "Epoch 120 | Loss: 0.2197\n",
      "Epoch 140 | Loss: 0.2051\n",
      "Epoch 160 | Loss: 0.2066\n",
      "Epoch 180 | Loss: 0.1975\n",
      "Epoch 200 | Loss: 0.1764\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.0470\n",
      "Epoch 20 | Loss: 0.3380\n",
      "Epoch 40 | Loss: 0.2960\n",
      "Epoch 60 | Loss: 0.2751\n",
      "Epoch 80 | Loss: 0.2558\n",
      "Epoch 100 | Loss: 0.2407\n",
      "Epoch 120 | Loss: 0.2302\n",
      "Epoch 140 | Loss: 0.2266\n",
      "Epoch 160 | Loss: 0.2203\n",
      "Epoch 180 | Loss: 0.2152\n",
      "Epoch 200 | Loss: 0.2065\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9538\n",
      "Epoch 20 | Loss: 0.3370\n",
      "Epoch 40 | Loss: 0.2989\n",
      "Epoch 60 | Loss: 0.2797\n",
      "Epoch 80 | Loss: 0.2637\n",
      "Epoch 100 | Loss: 0.2490\n",
      "Epoch 120 | Loss: 0.2424\n",
      "Epoch 140 | Loss: 0.2360\n",
      "Epoch 160 | Loss: 0.2318\n",
      "Epoch 180 | Loss: 0.2242\n",
      "Epoch 200 | Loss: 0.2206\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8834\n",
      "Epoch 20 | Loss: 0.3375\n",
      "Epoch 40 | Loss: 0.3068\n",
      "Epoch 60 | Loss: 0.2854\n",
      "Epoch 80 | Loss: 0.2752\n",
      "Epoch 100 | Loss: 0.2618\n",
      "Epoch 120 | Loss: 0.2493\n",
      "Epoch 140 | Loss: 0.2461\n",
      "Epoch 160 | Loss: 0.2332\n",
      "Epoch 180 | Loss: 0.2312\n",
      "Epoch 200 | Loss: 0.2276\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9637\n",
      "Epoch 20 | Loss: 0.3227\n",
      "Epoch 40 | Loss: 0.2700\n",
      "Epoch 60 | Loss: 0.2435\n",
      "Epoch 80 | Loss: 0.2002\n",
      "Epoch 100 | Loss: 0.1903\n",
      "Epoch 120 | Loss: 0.1722\n",
      "Epoch 140 | Loss: 0.1776\n",
      "Epoch 160 | Loss: 0.1613\n",
      "Epoch 180 | Loss: 0.1540\n",
      "Epoch 200 | Loss: 0.1448\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7995\n",
      "Epoch 20 | Loss: 0.2264\n",
      "Epoch 40 | Loss: 0.1897\n",
      "Epoch 60 | Loss: 0.1732\n",
      "Epoch 80 | Loss: 0.1573\n",
      "Epoch 100 | Loss: 0.1440\n",
      "Epoch 120 | Loss: 0.1442\n",
      "Epoch 140 | Loss: 0.1362\n",
      "Epoch 160 | Loss: 0.1319\n",
      "Epoch 180 | Loss: 0.1261\n",
      "Epoch 200 | Loss: 0.1245\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.6462\n",
      "Epoch 20 | Loss: 0.1808\n",
      "Epoch 40 | Loss: 0.1575\n",
      "Epoch 60 | Loss: 0.1479\n",
      "Epoch 80 | Loss: 0.1408\n",
      "Epoch 100 | Loss: 0.1303\n",
      "Epoch 120 | Loss: 0.1249\n",
      "Epoch 140 | Loss: 0.1222\n",
      "Epoch 160 | Loss: 0.1199\n",
      "Epoch 180 | Loss: 0.1155\n",
      "Epoch 200 | Loss: 0.1099\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.6489\n",
      "Epoch 20 | Loss: 0.1919\n",
      "Epoch 40 | Loss: 0.1688\n",
      "Epoch 60 | Loss: 0.1547\n",
      "Epoch 80 | Loss: 0.1479\n",
      "Epoch 100 | Loss: 0.1388\n",
      "Epoch 120 | Loss: 0.1306\n",
      "Epoch 140 | Loss: 0.1255\n",
      "Epoch 160 | Loss: 0.1220\n",
      "Epoch 180 | Loss: 0.1170\n",
      "Epoch 200 | Loss: 0.1146\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.5503\n",
      "Epoch 20 | Loss: 0.2090\n",
      "Epoch 40 | Loss: 0.1792\n",
      "Epoch 60 | Loss: 0.1648\n",
      "Epoch 80 | Loss: 0.1551\n",
      "Epoch 100 | Loss: 0.1479\n",
      "Epoch 120 | Loss: 0.1426\n",
      "Epoch 140 | Loss: 0.1383\n",
      "Epoch 160 | Loss: 0.1347\n",
      "Epoch 180 | Loss: 0.1316\n",
      "Epoch 200 | Loss: 0.1287\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 2.7589\n",
      "Epoch 20 | Loss: 0.5613\n",
      "Epoch 40 | Loss: 0.3403\n",
      "Epoch 60 | Loss: 0.3069\n",
      "Epoch 80 | Loss: 0.2889\n",
      "Epoch 100 | Loss: 0.2759\n",
      "Epoch 120 | Loss: 0.2661\n",
      "Epoch 140 | Loss: 0.2586\n",
      "Epoch 160 | Loss: 0.2525\n",
      "Epoch 180 | Loss: 0.2475\n",
      "Epoch 200 | Loss: 0.2433\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9553\n",
      "Epoch 20 | Loss: 0.4496\n",
      "Epoch 40 | Loss: 0.3677\n",
      "Epoch 60 | Loss: 0.3377\n",
      "Epoch 80 | Loss: 0.3191\n",
      "Epoch 100 | Loss: 0.3066\n",
      "Epoch 120 | Loss: 0.2973\n",
      "Epoch 140 | Loss: 0.2896\n",
      "Epoch 160 | Loss: 0.2830\n",
      "Epoch 180 | Loss: 0.2773\n",
      "Epoch 200 | Loss: 0.2725\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7648\n",
      "Epoch 20 | Loss: 0.3593\n",
      "Epoch 40 | Loss: 0.3210\n",
      "Epoch 60 | Loss: 0.3038\n",
      "Epoch 80 | Loss: 0.2926\n",
      "Epoch 100 | Loss: 0.2849\n",
      "Epoch 120 | Loss: 0.2788\n",
      "Epoch 140 | Loss: 0.2736\n",
      "Epoch 160 | Loss: 0.2692\n",
      "Epoch 180 | Loss: 0.2653\n",
      "Epoch 200 | Loss: 0.2617\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.3343\n",
      "Epoch 20 | Loss: 0.2093\n",
      "Epoch 40 | Loss: 0.1830\n",
      "Epoch 60 | Loss: 0.1685\n",
      "Epoch 80 | Loss: 0.1593\n",
      "Epoch 100 | Loss: 0.1531\n",
      "Epoch 120 | Loss: 0.1481\n",
      "Epoch 140 | Loss: 0.1438\n",
      "Epoch 160 | Loss: 0.1397\n",
      "Epoch 180 | Loss: 0.1359\n",
      "Epoch 200 | Loss: 0.1323\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9375\n",
      "Epoch 20 | Loss: 0.3470\n",
      "Epoch 40 | Loss: 0.3031\n",
      "Epoch 60 | Loss: 0.2841\n",
      "Epoch 80 | Loss: 0.2718\n",
      "Epoch 100 | Loss: 0.2632\n",
      "Epoch 120 | Loss: 0.2564\n",
      "Epoch 140 | Loss: 0.2506\n",
      "Epoch 160 | Loss: 0.2455\n",
      "Epoch 180 | Loss: 0.2412\n",
      "Epoch 200 | Loss: 0.2372\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.0715\n",
      "Epoch 20 | Loss: 0.4163\n",
      "Epoch 40 | Loss: 0.3629\n",
      "Epoch 60 | Loss: 0.3400\n",
      "Epoch 80 | Loss: 0.3248\n",
      "Epoch 100 | Loss: 0.3135\n",
      "Epoch 120 | Loss: 0.3050\n",
      "Epoch 140 | Loss: 0.2982\n",
      "Epoch 160 | Loss: 0.2927\n",
      "Epoch 180 | Loss: 0.2879\n",
      "Epoch 200 | Loss: 0.2836\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7370\n",
      "Epoch 20 | Loss: 0.4258\n",
      "Epoch 40 | Loss: 0.3780\n",
      "Epoch 60 | Loss: 0.3546\n",
      "Epoch 80 | Loss: 0.3391\n",
      "Epoch 100 | Loss: 0.3269\n",
      "Epoch 120 | Loss: 0.3172\n",
      "Epoch 140 | Loss: 0.3090\n",
      "Epoch 160 | Loss: 0.3017\n",
      "Epoch 180 | Loss: 0.2953\n",
      "Epoch 200 | Loss: 0.2896\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.4118\n",
      "Epoch 20 | Loss: 0.2602\n",
      "Epoch 40 | Loss: 0.2188\n",
      "Epoch 60 | Loss: 0.1976\n",
      "Epoch 80 | Loss: 0.1852\n",
      "Epoch 100 | Loss: 0.1763\n",
      "Epoch 120 | Loss: 0.1695\n",
      "Epoch 140 | Loss: 0.1636\n",
      "Epoch 160 | Loss: 0.1580\n",
      "Epoch 180 | Loss: 0.1529\n",
      "Epoch 200 | Loss: 0.1481\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.8389\n",
      "Epoch 20 | Loss: 0.4096\n",
      "Epoch 40 | Loss: 0.3594\n",
      "Epoch 60 | Loss: 0.3345\n",
      "Epoch 80 | Loss: 0.3165\n",
      "Epoch 100 | Loss: 0.3027\n",
      "Epoch 120 | Loss: 0.2918\n",
      "Epoch 140 | Loss: 0.2827\n",
      "Epoch 160 | Loss: 0.2751\n",
      "Epoch 180 | Loss: 0.2688\n",
      "Epoch 200 | Loss: 0.2633\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.4907\n",
      "Epoch 20 | Loss: 0.5392\n",
      "Epoch 40 | Loss: 0.4269\n",
      "Epoch 60 | Loss: 0.3944\n",
      "Epoch 80 | Loss: 0.3756\n",
      "Epoch 100 | Loss: 0.3615\n",
      "Epoch 120 | Loss: 0.3500\n",
      "Epoch 140 | Loss: 0.3404\n",
      "Epoch 160 | Loss: 0.3323\n",
      "Epoch 180 | Loss: 0.3253\n",
      "Epoch 200 | Loss: 0.3193\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.4346\n",
      "Epoch 20 | Loss: 0.4977\n",
      "Epoch 40 | Loss: 0.4260\n",
      "Epoch 60 | Loss: 0.3885\n",
      "Epoch 80 | Loss: 0.3649\n",
      "Epoch 100 | Loss: 0.3491\n",
      "Epoch 120 | Loss: 0.3378\n",
      "Epoch 140 | Loss: 0.3294\n",
      "Epoch 160 | Loss: 0.3228\n",
      "Epoch 180 | Loss: 0.3173\n",
      "Epoch 200 | Loss: 0.3127\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.9264\n",
      "Epoch 20 | Loss: 0.4498\n",
      "Epoch 40 | Loss: 0.2911\n",
      "Epoch 60 | Loss: 0.2642\n",
      "Epoch 80 | Loss: 0.2490\n",
      "Epoch 100 | Loss: 0.2395\n",
      "Epoch 120 | Loss: 0.2320\n",
      "Epoch 140 | Loss: 0.2258\n",
      "Epoch 160 | Loss: 0.2205\n",
      "Epoch 180 | Loss: 0.2159\n",
      "Epoch 200 | Loss: 0.2116\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7643\n",
      "Epoch 20 | Loss: 0.4460\n",
      "Epoch 40 | Loss: 0.3849\n",
      "Epoch 60 | Loss: 0.3511\n",
      "Epoch 80 | Loss: 0.3286\n",
      "Epoch 100 | Loss: 0.3122\n",
      "Epoch 120 | Loss: 0.3001\n",
      "Epoch 140 | Loss: 0.2905\n",
      "Epoch 160 | Loss: 0.2826\n",
      "Epoch 180 | Loss: 0.2757\n",
      "Epoch 200 | Loss: 0.2697\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.1403\n",
      "Epoch 20 | Loss: 0.4506\n",
      "Epoch 40 | Loss: 0.3956\n",
      "Epoch 60 | Loss: 0.3714\n",
      "Epoch 80 | Loss: 0.3543\n",
      "Epoch 100 | Loss: 0.3405\n",
      "Epoch 120 | Loss: 0.3292\n",
      "Epoch 140 | Loss: 0.3195\n",
      "Epoch 160 | Loss: 0.3114\n",
      "Epoch 180 | Loss: 0.3045\n",
      "Epoch 200 | Loss: 0.2989\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7405\n",
      "Epoch 20 | Loss: 0.4277\n",
      "Epoch 40 | Loss: 0.3823\n",
      "Epoch 60 | Loss: 0.3627\n",
      "Epoch 80 | Loss: 0.3487\n",
      "Epoch 100 | Loss: 0.3370\n",
      "Epoch 120 | Loss: 0.3267\n",
      "Epoch 140 | Loss: 0.3178\n",
      "Epoch 160 | Loss: 0.3104\n",
      "Epoch 180 | Loss: 0.3039\n",
      "Epoch 200 | Loss: 0.2980\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.8631\n",
      "Epoch 20 | Loss: 0.4460\n",
      "Epoch 40 | Loss: 0.3822\n",
      "Epoch 60 | Loss: 0.3474\n",
      "Epoch 80 | Loss: 0.3239\n",
      "Epoch 100 | Loss: 0.3063\n",
      "Epoch 120 | Loss: 0.2924\n",
      "Epoch 140 | Loss: 0.2802\n",
      "Epoch 160 | Loss: 0.2701\n",
      "Epoch 180 | Loss: 0.2614\n",
      "Epoch 200 | Loss: 0.2537\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9689\n",
      "Epoch 20 | Loss: 0.4902\n",
      "Epoch 40 | Loss: 0.4036\n",
      "Epoch 60 | Loss: 0.3616\n",
      "Epoch 80 | Loss: 0.3353\n",
      "Epoch 100 | Loss: 0.3190\n",
      "Epoch 120 | Loss: 0.3076\n",
      "Epoch 140 | Loss: 0.2987\n",
      "Epoch 160 | Loss: 0.2912\n",
      "Epoch 180 | Loss: 0.2846\n",
      "Epoch 200 | Loss: 0.2787\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.4116\n",
      "Epoch 20 | Loss: 0.5068\n",
      "Epoch 40 | Loss: 0.4001\n",
      "Epoch 60 | Loss: 0.3610\n",
      "Epoch 80 | Loss: 0.3381\n",
      "Epoch 100 | Loss: 0.3227\n",
      "Epoch 120 | Loss: 0.3113\n",
      "Epoch 140 | Loss: 0.3024\n",
      "Epoch 160 | Loss: 0.2949\n",
      "Epoch 180 | Loss: 0.2885\n",
      "Epoch 200 | Loss: 0.2830\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.2686\n",
      "Epoch 20 | Loss: 0.4834\n",
      "Epoch 40 | Loss: 0.4056\n",
      "Epoch 60 | Loss: 0.3731\n",
      "Epoch 80 | Loss: 0.3524\n",
      "Epoch 100 | Loss: 0.3378\n",
      "Epoch 120 | Loss: 0.3271\n",
      "Epoch 140 | Loss: 0.3186\n",
      "Epoch 160 | Loss: 0.3112\n",
      "Epoch 180 | Loss: 0.3047\n",
      "Epoch 200 | Loss: 0.2988\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.0750\n",
      "Epoch 20 | Loss: 0.4302\n",
      "Epoch 40 | Loss: 0.3704\n",
      "Epoch 60 | Loss: 0.3384\n",
      "Epoch 80 | Loss: 0.3159\n",
      "Epoch 100 | Loss: 0.2991\n",
      "Epoch 120 | Loss: 0.2853\n",
      "Epoch 140 | Loss: 0.2732\n",
      "Epoch 160 | Loss: 0.2628\n",
      "Epoch 180 | Loss: 0.2533\n",
      "Epoch 200 | Loss: 0.2445\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7547\n",
      "Epoch 20 | Loss: 0.3583\n",
      "Epoch 40 | Loss: 0.2730\n",
      "Epoch 60 | Loss: 0.2360\n",
      "Epoch 80 | Loss: 0.2163\n",
      "Epoch 100 | Loss: 0.2049\n",
      "Epoch 120 | Loss: 0.1964\n",
      "Epoch 140 | Loss: 0.1893\n",
      "Epoch 160 | Loss: 0.1832\n",
      "Epoch 180 | Loss: 0.1777\n",
      "Epoch 200 | Loss: 0.1728\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.6350\n",
      "Epoch 20 | Loss: 0.2938\n",
      "Epoch 40 | Loss: 0.2236\n",
      "Epoch 60 | Loss: 0.1984\n",
      "Epoch 80 | Loss: 0.1838\n",
      "Epoch 100 | Loss: 0.1735\n",
      "Epoch 120 | Loss: 0.1657\n",
      "Epoch 140 | Loss: 0.1596\n",
      "Epoch 160 | Loss: 0.1546\n",
      "Epoch 180 | Loss: 0.1504\n",
      "Epoch 200 | Loss: 0.1466\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.0197\n",
      "Epoch 20 | Loss: 0.3644\n",
      "Epoch 40 | Loss: 0.2370\n",
      "Epoch 60 | Loss: 0.2038\n",
      "Epoch 80 | Loss: 0.1886\n",
      "Epoch 100 | Loss: 0.1798\n",
      "Epoch 120 | Loss: 0.1736\n",
      "Epoch 140 | Loss: 0.1690\n",
      "Epoch 160 | Loss: 0.1652\n",
      "Epoch 180 | Loss: 0.1620\n",
      "Epoch 200 | Loss: 0.1590\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.0850\n",
      "Epoch 20 | Loss: 0.4235\n",
      "Epoch 40 | Loss: 0.2618\n",
      "Epoch 60 | Loss: 0.2252\n",
      "Epoch 80 | Loss: 0.2040\n",
      "Epoch 100 | Loss: 0.1873\n",
      "Epoch 120 | Loss: 0.1822\n",
      "Epoch 140 | Loss: 0.1735\n",
      "Epoch 160 | Loss: 0.1662\n",
      "Epoch 180 | Loss: 0.1627\n",
      "Epoch 200 | Loss: 0.1580\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.0139\n",
      "Epoch 20 | Loss: 0.4119\n",
      "Epoch 40 | Loss: 0.3301\n",
      "Epoch 60 | Loss: 0.2976\n",
      "Epoch 80 | Loss: 0.2820\n",
      "Epoch 100 | Loss: 0.2697\n",
      "Epoch 120 | Loss: 0.2642\n",
      "Epoch 140 | Loss: 0.2565\n",
      "Epoch 160 | Loss: 0.2526\n",
      "Epoch 180 | Loss: 0.2524\n",
      "Epoch 200 | Loss: 0.2470\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.6933\n",
      "Epoch 20 | Loss: 0.3709\n",
      "Epoch 40 | Loss: 0.3376\n",
      "Epoch 60 | Loss: 0.3173\n",
      "Epoch 80 | Loss: 0.3039\n",
      "Epoch 100 | Loss: 0.3036\n",
      "Epoch 120 | Loss: 0.2935\n",
      "Epoch 140 | Loss: 0.2880\n",
      "Epoch 160 | Loss: 0.2847\n",
      "Epoch 180 | Loss: 0.2797\n",
      "Epoch 200 | Loss: 0.2704\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.3008\n",
      "Epoch 20 | Loss: 0.4644\n",
      "Epoch 40 | Loss: 0.3850\n",
      "Epoch 60 | Loss: 0.3596\n",
      "Epoch 80 | Loss: 0.3424\n",
      "Epoch 100 | Loss: 0.3306\n",
      "Epoch 120 | Loss: 0.3193\n",
      "Epoch 140 | Loss: 0.3131\n",
      "Epoch 160 | Loss: 0.3084\n",
      "Epoch 180 | Loss: 0.3008\n",
      "Epoch 200 | Loss: 0.2977\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.5723\n",
      "Epoch 20 | Loss: 0.2592\n",
      "Epoch 40 | Loss: 0.2164\n",
      "Epoch 60 | Loss: 0.1972\n",
      "Epoch 80 | Loss: 0.1827\n",
      "Epoch 100 | Loss: 0.1754\n",
      "Epoch 120 | Loss: 0.1700\n",
      "Epoch 140 | Loss: 0.1654\n",
      "Epoch 160 | Loss: 0.1571\n",
      "Epoch 180 | Loss: 0.1579\n",
      "Epoch 200 | Loss: 0.1544\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6487\n",
      "Epoch 20 | Loss: 0.3637\n",
      "Epoch 40 | Loss: 0.3179\n",
      "Epoch 60 | Loss: 0.3031\n",
      "Epoch 80 | Loss: 0.2941\n",
      "Epoch 100 | Loss: 0.2895\n",
      "Epoch 120 | Loss: 0.2790\n",
      "Epoch 140 | Loss: 0.2731\n",
      "Epoch 160 | Loss: 0.2676\n",
      "Epoch 180 | Loss: 0.2687\n",
      "Epoch 200 | Loss: 0.2591\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 2.2747\n",
      "Epoch 20 | Loss: 0.5361\n",
      "Epoch 40 | Loss: 0.4025\n",
      "Epoch 60 | Loss: 0.3762\n",
      "Epoch 80 | Loss: 0.3621\n",
      "Epoch 100 | Loss: 0.3498\n",
      "Epoch 120 | Loss: 0.3427\n",
      "Epoch 140 | Loss: 0.3356\n",
      "Epoch 160 | Loss: 0.3267\n",
      "Epoch 180 | Loss: 0.3263\n",
      "Epoch 200 | Loss: 0.3180\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.8338\n",
      "Epoch 20 | Loss: 0.5656\n",
      "Epoch 40 | Loss: 0.4392\n",
      "Epoch 60 | Loss: 0.4064\n",
      "Epoch 80 | Loss: 0.3849\n",
      "Epoch 100 | Loss: 0.3719\n",
      "Epoch 120 | Loss: 0.3607\n",
      "Epoch 140 | Loss: 0.3527\n",
      "Epoch 160 | Loss: 0.3522\n",
      "Epoch 180 | Loss: 0.3405\n",
      "Epoch 200 | Loss: 0.3392\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 3.0340\n",
      "Epoch 20 | Loss: 0.7814\n",
      "Epoch 40 | Loss: 0.4001\n",
      "Epoch 60 | Loss: 0.3040\n",
      "Epoch 80 | Loss: 0.2736\n",
      "Epoch 100 | Loss: 0.2573\n",
      "Epoch 120 | Loss: 0.2472\n",
      "Epoch 140 | Loss: 0.2420\n",
      "Epoch 160 | Loss: 0.2314\n",
      "Epoch 180 | Loss: 0.2317\n",
      "Epoch 200 | Loss: 0.2141\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 2.1621\n",
      "Epoch 20 | Loss: 0.7885\n",
      "Epoch 40 | Loss: 0.4636\n",
      "Epoch 60 | Loss: 0.4048\n",
      "Epoch 80 | Loss: 0.3779\n",
      "Epoch 100 | Loss: 0.3573\n",
      "Epoch 120 | Loss: 0.3430\n",
      "Epoch 140 | Loss: 0.3291\n",
      "Epoch 160 | Loss: 0.3273\n",
      "Epoch 180 | Loss: 0.3130\n",
      "Epoch 200 | Loss: 0.3128\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8390\n",
      "Epoch 20 | Loss: 0.4701\n",
      "Epoch 40 | Loss: 0.4046\n",
      "Epoch 60 | Loss: 0.3864\n",
      "Epoch 80 | Loss: 0.3707\n",
      "Epoch 100 | Loss: 0.3586\n",
      "Epoch 120 | Loss: 0.3465\n",
      "Epoch 140 | Loss: 0.3377\n",
      "Epoch 160 | Loss: 0.3289\n",
      "Epoch 180 | Loss: 0.3258\n",
      "Epoch 200 | Loss: 0.3180\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 2.1118\n",
      "Epoch 20 | Loss: 0.5686\n",
      "Epoch 40 | Loss: 0.4260\n",
      "Epoch 60 | Loss: 0.3952\n",
      "Epoch 80 | Loss: 0.3870\n",
      "Epoch 100 | Loss: 0.3704\n",
      "Epoch 120 | Loss: 0.3673\n",
      "Epoch 140 | Loss: 0.3607\n",
      "Epoch 160 | Loss: 0.3507\n",
      "Epoch 180 | Loss: 0.3448\n",
      "Epoch 200 | Loss: 0.3440\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.8853\n",
      "Epoch 20 | Loss: 0.3508\n",
      "Epoch 40 | Loss: 0.3035\n",
      "Epoch 60 | Loss: 0.2892\n",
      "Epoch 80 | Loss: 0.2635\n",
      "Epoch 100 | Loss: 0.2579\n",
      "Epoch 120 | Loss: 0.2435\n",
      "Epoch 140 | Loss: 0.2367\n",
      "Epoch 160 | Loss: 0.2298\n",
      "Epoch 180 | Loss: 0.2199\n",
      "Epoch 200 | Loss: 0.2158\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.2609\n",
      "Epoch 20 | Loss: 0.5259\n",
      "Epoch 40 | Loss: 0.4328\n",
      "Epoch 60 | Loss: 0.3943\n",
      "Epoch 80 | Loss: 0.3808\n",
      "Epoch 100 | Loss: 0.3600\n",
      "Epoch 120 | Loss: 0.3410\n",
      "Epoch 140 | Loss: 0.3349\n",
      "Epoch 160 | Loss: 0.3203\n",
      "Epoch 180 | Loss: 0.3212\n",
      "Epoch 200 | Loss: 0.3115\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.1471\n",
      "Epoch 20 | Loss: 0.5852\n",
      "Epoch 40 | Loss: 0.4732\n",
      "Epoch 60 | Loss: 0.4307\n",
      "Epoch 80 | Loss: 0.3970\n",
      "Epoch 100 | Loss: 0.3803\n",
      "Epoch 120 | Loss: 0.3676\n",
      "Epoch 140 | Loss: 0.3593\n",
      "Epoch 160 | Loss: 0.3454\n",
      "Epoch 180 | Loss: 0.3396\n",
      "Epoch 200 | Loss: 0.3343\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8079\n",
      "Epoch 20 | Loss: 0.4849\n",
      "Epoch 40 | Loss: 0.4248\n",
      "Epoch 60 | Loss: 0.4052\n",
      "Epoch 80 | Loss: 0.3862\n",
      "Epoch 100 | Loss: 0.3742\n",
      "Epoch 120 | Loss: 0.3625\n",
      "Epoch 140 | Loss: 0.3578\n",
      "Epoch 160 | Loss: 0.3508\n",
      "Epoch 180 | Loss: 0.3406\n",
      "Epoch 200 | Loss: 0.3373\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.1132\n",
      "Epoch 20 | Loss: 0.5759\n",
      "Epoch 40 | Loss: 0.4347\n",
      "Epoch 60 | Loss: 0.3983\n",
      "Epoch 80 | Loss: 0.3747\n",
      "Epoch 100 | Loss: 0.3626\n",
      "Epoch 120 | Loss: 0.3402\n",
      "Epoch 140 | Loss: 0.3320\n",
      "Epoch 160 | Loss: 0.3170\n",
      "Epoch 180 | Loss: 0.3100\n",
      "Epoch 200 | Loss: 0.3131\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.0054\n",
      "Epoch 20 | Loss: 0.5122\n",
      "Epoch 40 | Loss: 0.4275\n",
      "Epoch 60 | Loss: 0.3796\n",
      "Epoch 80 | Loss: 0.3663\n",
      "Epoch 100 | Loss: 0.3468\n",
      "Epoch 120 | Loss: 0.3426\n",
      "Epoch 140 | Loss: 0.3250\n",
      "Epoch 160 | Loss: 0.3197\n",
      "Epoch 180 | Loss: 0.3109\n",
      "Epoch 200 | Loss: 0.3072\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.7461\n",
      "Epoch 20 | Loss: 0.4712\n",
      "Epoch 40 | Loss: 0.4007\n",
      "Epoch 60 | Loss: 0.3652\n",
      "Epoch 80 | Loss: 0.3517\n",
      "Epoch 100 | Loss: 0.3343\n",
      "Epoch 120 | Loss: 0.3192\n",
      "Epoch 140 | Loss: 0.3119\n",
      "Epoch 160 | Loss: 0.3068\n",
      "Epoch 180 | Loss: 0.2997\n",
      "Epoch 200 | Loss: 0.2957\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.1070\n",
      "Epoch 20 | Loss: 0.5421\n",
      "Epoch 40 | Loss: 0.4338\n",
      "Epoch 60 | Loss: 0.3814\n",
      "Epoch 80 | Loss: 0.3696\n",
      "Epoch 100 | Loss: 0.3566\n",
      "Epoch 120 | Loss: 0.3491\n",
      "Epoch 140 | Loss: 0.3391\n",
      "Epoch 160 | Loss: 0.3331\n",
      "Epoch 180 | Loss: 0.3302\n",
      "Epoch 200 | Loss: 0.3219\n",
      "\n",
      "Running config: {'hidden_dim': 32, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.7845\n",
      "Epoch 20 | Loss: 0.4735\n",
      "Epoch 40 | Loss: 0.3963\n",
      "Epoch 60 | Loss: 0.3702\n",
      "Epoch 80 | Loss: 0.3550\n",
      "Epoch 100 | Loss: 0.3272\n",
      "Epoch 120 | Loss: 0.3168\n",
      "Epoch 140 | Loss: 0.3067\n",
      "Epoch 160 | Loss: 0.2905\n",
      "Epoch 180 | Loss: 0.2824\n",
      "Epoch 200 | Loss: 0.2755\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9951\n",
      "Epoch 20 | Loss: 0.4221\n",
      "Epoch 40 | Loss: 0.2904\n",
      "Epoch 60 | Loss: 0.2541\n",
      "Epoch 80 | Loss: 0.2405\n",
      "Epoch 100 | Loss: 0.2270\n",
      "Epoch 120 | Loss: 0.2202\n",
      "Epoch 140 | Loss: 0.2184\n",
      "Epoch 160 | Loss: 0.2047\n",
      "Epoch 180 | Loss: 0.2020\n",
      "Epoch 200 | Loss: 0.2017\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9918\n",
      "Epoch 20 | Loss: 0.3677\n",
      "Epoch 40 | Loss: 0.2408\n",
      "Epoch 60 | Loss: 0.2130\n",
      "Epoch 80 | Loss: 0.1971\n",
      "Epoch 100 | Loss: 0.1937\n",
      "Epoch 120 | Loss: 0.1845\n",
      "Epoch 140 | Loss: 0.1811\n",
      "Epoch 160 | Loss: 0.1766\n",
      "Epoch 180 | Loss: 0.1743\n",
      "Epoch 200 | Loss: 0.1690\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.4456\n",
      "Epoch 20 | Loss: 0.6537\n",
      "Epoch 40 | Loss: 0.4019\n",
      "Epoch 60 | Loss: 0.2929\n",
      "Epoch 80 | Loss: 0.2401\n",
      "Epoch 100 | Loss: 0.2123\n",
      "Epoch 120 | Loss: 0.1972\n",
      "Epoch 140 | Loss: 0.1924\n",
      "Epoch 160 | Loss: 0.1886\n",
      "Epoch 180 | Loss: 0.1858\n",
      "Epoch 200 | Loss: 0.1781\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.8922\n",
      "Epoch 20 | Loss: 0.1479\n",
      "Epoch 40 | Loss: 0.1244\n",
      "Epoch 60 | Loss: 0.1134\n",
      "Epoch 80 | Loss: 0.1054\n",
      "Epoch 100 | Loss: 0.0984\n",
      "Epoch 120 | Loss: 0.0922\n",
      "Epoch 140 | Loss: 0.0864\n",
      "Epoch 160 | Loss: 0.0812\n",
      "Epoch 180 | Loss: 0.0763\n",
      "Epoch 200 | Loss: 0.0718\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.4823\n",
      "Epoch 20 | Loss: 0.2204\n",
      "Epoch 40 | Loss: 0.1966\n",
      "Epoch 60 | Loss: 0.1817\n",
      "Epoch 80 | Loss: 0.1705\n",
      "Epoch 100 | Loss: 0.1606\n",
      "Epoch 120 | Loss: 0.1522\n",
      "Epoch 140 | Loss: 0.1449\n",
      "Epoch 160 | Loss: 0.1389\n",
      "Epoch 180 | Loss: 0.1348\n",
      "Epoch 200 | Loss: 0.1305\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.2302\n",
      "Epoch 20 | Loss: 0.2977\n",
      "Epoch 40 | Loss: 0.2592\n",
      "Epoch 60 | Loss: 0.2447\n",
      "Epoch 80 | Loss: 0.2343\n",
      "Epoch 100 | Loss: 0.2258\n",
      "Epoch 120 | Loss: 0.2182\n",
      "Epoch 140 | Loss: 0.2107\n",
      "Epoch 160 | Loss: 0.2040\n",
      "Epoch 180 | Loss: 0.1978\n",
      "Epoch 200 | Loss: 0.1920\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.0521\n",
      "Epoch 20 | Loss: 0.2955\n",
      "Epoch 40 | Loss: 0.2663\n",
      "Epoch 60 | Loss: 0.2526\n",
      "Epoch 80 | Loss: 0.2428\n",
      "Epoch 100 | Loss: 0.2339\n",
      "Epoch 120 | Loss: 0.2258\n",
      "Epoch 140 | Loss: 0.2181\n",
      "Epoch 160 | Loss: 0.2112\n",
      "Epoch 180 | Loss: 0.2053\n",
      "Epoch 200 | Loss: 0.2006\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.7879\n",
      "Epoch 20 | Loss: 0.1623\n",
      "Epoch 40 | Loss: 0.1378\n",
      "Epoch 60 | Loss: 0.1233\n",
      "Epoch 80 | Loss: 0.1127\n",
      "Epoch 100 | Loss: 0.1037\n",
      "Epoch 120 | Loss: 0.0958\n",
      "Epoch 140 | Loss: 0.0890\n",
      "Epoch 160 | Loss: 0.0829\n",
      "Epoch 180 | Loss: 0.0774\n",
      "Epoch 200 | Loss: 0.0725\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.5737\n",
      "Epoch 20 | Loss: 0.2464\n",
      "Epoch 40 | Loss: 0.2173\n",
      "Epoch 60 | Loss: 0.1989\n",
      "Epoch 80 | Loss: 0.1844\n",
      "Epoch 100 | Loss: 0.1728\n",
      "Epoch 120 | Loss: 0.1637\n",
      "Epoch 140 | Loss: 0.1564\n",
      "Epoch 160 | Loss: 0.1495\n",
      "Epoch 180 | Loss: 0.1447\n",
      "Epoch 200 | Loss: 0.1416\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9814\n",
      "Epoch 20 | Loss: 0.3130\n",
      "Epoch 40 | Loss: 0.2747\n",
      "Epoch 60 | Loss: 0.2556\n",
      "Epoch 80 | Loss: 0.2425\n",
      "Epoch 100 | Loss: 0.2324\n",
      "Epoch 120 | Loss: 0.2239\n",
      "Epoch 140 | Loss: 0.2165\n",
      "Epoch 160 | Loss: 0.2100\n",
      "Epoch 180 | Loss: 0.2043\n",
      "Epoch 200 | Loss: 0.1991\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.5884\n",
      "Epoch 20 | Loss: 0.2996\n",
      "Epoch 40 | Loss: 0.2694\n",
      "Epoch 60 | Loss: 0.2521\n",
      "Epoch 80 | Loss: 0.2376\n",
      "Epoch 100 | Loss: 0.2256\n",
      "Epoch 120 | Loss: 0.2157\n",
      "Epoch 140 | Loss: 0.2077\n",
      "Epoch 160 | Loss: 0.2013\n",
      "Epoch 180 | Loss: 0.1969\n",
      "Epoch 200 | Loss: 0.1907\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.5026\n",
      "Epoch 20 | Loss: 0.2001\n",
      "Epoch 40 | Loss: 0.1715\n",
      "Epoch 60 | Loss: 0.1549\n",
      "Epoch 80 | Loss: 0.1420\n",
      "Epoch 100 | Loss: 0.1309\n",
      "Epoch 120 | Loss: 0.1207\n",
      "Epoch 140 | Loss: 0.1110\n",
      "Epoch 160 | Loss: 0.1022\n",
      "Epoch 180 | Loss: 0.0943\n",
      "Epoch 200 | Loss: 0.0878\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 2.2150\n",
      "Epoch 20 | Loss: 0.3083\n",
      "Epoch 40 | Loss: 0.2580\n",
      "Epoch 60 | Loss: 0.2367\n",
      "Epoch 80 | Loss: 0.2220\n",
      "Epoch 100 | Loss: 0.2106\n",
      "Epoch 120 | Loss: 0.2014\n",
      "Epoch 140 | Loss: 0.1939\n",
      "Epoch 160 | Loss: 0.1873\n",
      "Epoch 180 | Loss: 0.1815\n",
      "Epoch 200 | Loss: 0.1763\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.3718\n",
      "Epoch 20 | Loss: 0.3215\n",
      "Epoch 40 | Loss: 0.2847\n",
      "Epoch 60 | Loss: 0.2659\n",
      "Epoch 80 | Loss: 0.2505\n",
      "Epoch 100 | Loss: 0.2379\n",
      "Epoch 120 | Loss: 0.2283\n",
      "Epoch 140 | Loss: 0.2205\n",
      "Epoch 160 | Loss: 0.2140\n",
      "Epoch 180 | Loss: 0.2082\n",
      "Epoch 200 | Loss: 0.2028\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.3134\n",
      "Epoch 20 | Loss: 0.3355\n",
      "Epoch 40 | Loss: 0.3000\n",
      "Epoch 60 | Loss: 0.2783\n",
      "Epoch 80 | Loss: 0.2644\n",
      "Epoch 100 | Loss: 0.2522\n",
      "Epoch 120 | Loss: 0.2407\n",
      "Epoch 140 | Loss: 0.2314\n",
      "Epoch 160 | Loss: 0.2242\n",
      "Epoch 180 | Loss: 0.2168\n",
      "Epoch 200 | Loss: 0.2120\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.3758\n",
      "Epoch 20 | Loss: 0.2403\n",
      "Epoch 40 | Loss: 0.1959\n",
      "Epoch 60 | Loss: 0.1710\n",
      "Epoch 80 | Loss: 0.1500\n",
      "Epoch 100 | Loss: 0.1325\n",
      "Epoch 120 | Loss: 0.1183\n",
      "Epoch 140 | Loss: 0.1078\n",
      "Epoch 160 | Loss: 0.0996\n",
      "Epoch 180 | Loss: 0.0926\n",
      "Epoch 200 | Loss: 0.0869\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7470\n",
      "Epoch 20 | Loss: 0.2917\n",
      "Epoch 40 | Loss: 0.2500\n",
      "Epoch 60 | Loss: 0.2230\n",
      "Epoch 80 | Loss: 0.2039\n",
      "Epoch 100 | Loss: 0.1886\n",
      "Epoch 120 | Loss: 0.1770\n",
      "Epoch 140 | Loss: 0.1657\n",
      "Epoch 160 | Loss: 0.1575\n",
      "Epoch 180 | Loss: 0.1536\n",
      "Epoch 200 | Loss: 0.1467\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.7543\n",
      "Epoch 20 | Loss: 0.3113\n",
      "Epoch 40 | Loss: 0.2759\n",
      "Epoch 60 | Loss: 0.2539\n",
      "Epoch 80 | Loss: 0.2357\n",
      "Epoch 100 | Loss: 0.2206\n",
      "Epoch 120 | Loss: 0.2079\n",
      "Epoch 140 | Loss: 0.1986\n",
      "Epoch 160 | Loss: 0.1923\n",
      "Epoch 180 | Loss: 0.1864\n",
      "Epoch 200 | Loss: 0.1804\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8727\n",
      "Epoch 20 | Loss: 0.3351\n",
      "Epoch 40 | Loss: 0.2977\n",
      "Epoch 60 | Loss: 0.2746\n",
      "Epoch 80 | Loss: 0.2549\n",
      "Epoch 100 | Loss: 0.2364\n",
      "Epoch 120 | Loss: 0.2221\n",
      "Epoch 140 | Loss: 0.2120\n",
      "Epoch 160 | Loss: 0.2051\n",
      "Epoch 180 | Loss: 0.1978\n",
      "Epoch 200 | Loss: 0.1927\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.0910\n",
      "Epoch 20 | Loss: 0.2926\n",
      "Epoch 40 | Loss: 0.2391\n",
      "Epoch 60 | Loss: 0.2037\n",
      "Epoch 80 | Loss: 0.1745\n",
      "Epoch 100 | Loss: 0.1517\n",
      "Epoch 120 | Loss: 0.1349\n",
      "Epoch 140 | Loss: 0.1217\n",
      "Epoch 160 | Loss: 0.1113\n",
      "Epoch 180 | Loss: 0.1034\n",
      "Epoch 200 | Loss: 0.0960\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7268\n",
      "Epoch 20 | Loss: 0.2820\n",
      "Epoch 40 | Loss: 0.2365\n",
      "Epoch 60 | Loss: 0.2070\n",
      "Epoch 80 | Loss: 0.1865\n",
      "Epoch 100 | Loss: 0.1704\n",
      "Epoch 120 | Loss: 0.1598\n",
      "Epoch 140 | Loss: 0.1504\n",
      "Epoch 160 | Loss: 0.1437\n",
      "Epoch 180 | Loss: 0.1387\n",
      "Epoch 200 | Loss: 0.1350\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8760\n",
      "Epoch 20 | Loss: 0.3058\n",
      "Epoch 40 | Loss: 0.2660\n",
      "Epoch 60 | Loss: 0.2417\n",
      "Epoch 80 | Loss: 0.2224\n",
      "Epoch 100 | Loss: 0.2074\n",
      "Epoch 120 | Loss: 0.1948\n",
      "Epoch 140 | Loss: 0.1843\n",
      "Epoch 160 | Loss: 0.1768\n",
      "Epoch 180 | Loss: 0.1701\n",
      "Epoch 200 | Loss: 0.1635\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8282\n",
      "Epoch 20 | Loss: 0.3200\n",
      "Epoch 40 | Loss: 0.2756\n",
      "Epoch 60 | Loss: 0.2500\n",
      "Epoch 80 | Loss: 0.2310\n",
      "Epoch 100 | Loss: 0.2158\n",
      "Epoch 120 | Loss: 0.2034\n",
      "Epoch 140 | Loss: 0.1942\n",
      "Epoch 160 | Loss: 0.1861\n",
      "Epoch 180 | Loss: 0.1797\n",
      "Epoch 200 | Loss: 0.1783\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9623\n",
      "Epoch 20 | Loss: 0.2652\n",
      "Epoch 40 | Loss: 0.1962\n",
      "Epoch 60 | Loss: 0.1484\n",
      "Epoch 80 | Loss: 0.1159\n",
      "Epoch 100 | Loss: 0.0950\n",
      "Epoch 120 | Loss: 0.0820\n",
      "Epoch 140 | Loss: 0.0733\n",
      "Epoch 160 | Loss: 0.0673\n",
      "Epoch 180 | Loss: 0.0610\n",
      "Epoch 200 | Loss: 0.0576\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7307\n",
      "Epoch 20 | Loss: 0.1934\n",
      "Epoch 40 | Loss: 0.1578\n",
      "Epoch 60 | Loss: 0.1345\n",
      "Epoch 80 | Loss: 0.1180\n",
      "Epoch 100 | Loss: 0.1066\n",
      "Epoch 120 | Loss: 0.0981\n",
      "Epoch 140 | Loss: 0.0920\n",
      "Epoch 160 | Loss: 0.0863\n",
      "Epoch 180 | Loss: 0.0827\n",
      "Epoch 200 | Loss: 0.0794\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8855\n",
      "Epoch 20 | Loss: 0.1647\n",
      "Epoch 40 | Loss: 0.1402\n",
      "Epoch 60 | Loss: 0.1224\n",
      "Epoch 80 | Loss: 0.1113\n",
      "Epoch 100 | Loss: 0.1036\n",
      "Epoch 120 | Loss: 0.0980\n",
      "Epoch 140 | Loss: 0.0935\n",
      "Epoch 160 | Loss: 0.0903\n",
      "Epoch 180 | Loss: 0.0873\n",
      "Epoch 200 | Loss: 0.0852\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7486\n",
      "Epoch 20 | Loss: 0.1620\n",
      "Epoch 40 | Loss: 0.1447\n",
      "Epoch 60 | Loss: 0.1291\n",
      "Epoch 80 | Loss: 0.1177\n",
      "Epoch 100 | Loss: 0.1092\n",
      "Epoch 120 | Loss: 0.1028\n",
      "Epoch 140 | Loss: 0.0982\n",
      "Epoch 160 | Loss: 0.0945\n",
      "Epoch 180 | Loss: 0.0916\n",
      "Epoch 200 | Loss: 0.0891\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.4123\n",
      "Epoch 20 | Loss: 0.1394\n",
      "Epoch 40 | Loss: 0.1224\n",
      "Epoch 60 | Loss: 0.1097\n",
      "Epoch 80 | Loss: 0.1045\n",
      "Epoch 100 | Loss: 0.0972\n",
      "Epoch 120 | Loss: 0.0950\n",
      "Epoch 140 | Loss: 0.0847\n",
      "Epoch 160 | Loss: 0.0872\n",
      "Epoch 180 | Loss: 0.0829\n",
      "Epoch 200 | Loss: 0.0808\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.4153\n",
      "Epoch 20 | Loss: 0.2647\n",
      "Epoch 40 | Loss: 0.2244\n",
      "Epoch 60 | Loss: 0.2107\n",
      "Epoch 80 | Loss: 0.1991\n",
      "Epoch 100 | Loss: 0.1897\n",
      "Epoch 120 | Loss: 0.1850\n",
      "Epoch 140 | Loss: 0.1815\n",
      "Epoch 160 | Loss: 0.1765\n",
      "Epoch 180 | Loss: 0.1748\n",
      "Epoch 200 | Loss: 0.1742\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9836\n",
      "Epoch 20 | Loss: 0.2987\n",
      "Epoch 40 | Loss: 0.2674\n",
      "Epoch 60 | Loss: 0.2514\n",
      "Epoch 80 | Loss: 0.2426\n",
      "Epoch 100 | Loss: 0.2342\n",
      "Epoch 120 | Loss: 0.2267\n",
      "Epoch 140 | Loss: 0.2218\n",
      "Epoch 160 | Loss: 0.2186\n",
      "Epoch 180 | Loss: 0.2185\n",
      "Epoch 200 | Loss: 0.2137\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.4984\n",
      "Epoch 20 | Loss: 0.3167\n",
      "Epoch 40 | Loss: 0.2816\n",
      "Epoch 60 | Loss: 0.2682\n",
      "Epoch 80 | Loss: 0.2566\n",
      "Epoch 100 | Loss: 0.2470\n",
      "Epoch 120 | Loss: 0.2435\n",
      "Epoch 140 | Loss: 0.2414\n",
      "Epoch 160 | Loss: 0.2345\n",
      "Epoch 180 | Loss: 0.2313\n",
      "Epoch 200 | Loss: 0.2272\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.1308\n",
      "Epoch 20 | Loss: 0.1751\n",
      "Epoch 40 | Loss: 0.1501\n",
      "Epoch 60 | Loss: 0.1399\n",
      "Epoch 80 | Loss: 0.1346\n",
      "Epoch 100 | Loss: 0.1248\n",
      "Epoch 120 | Loss: 0.1192\n",
      "Epoch 140 | Loss: 0.1119\n",
      "Epoch 160 | Loss: 0.1103\n",
      "Epoch 180 | Loss: 0.1037\n",
      "Epoch 200 | Loss: 0.0971\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9694\n",
      "Epoch 20 | Loss: 0.2815\n",
      "Epoch 40 | Loss: 0.2419\n",
      "Epoch 60 | Loss: 0.2244\n",
      "Epoch 80 | Loss: 0.2144\n",
      "Epoch 100 | Loss: 0.2077\n",
      "Epoch 120 | Loss: 0.2021\n",
      "Epoch 140 | Loss: 0.1927\n",
      "Epoch 160 | Loss: 0.1907\n",
      "Epoch 180 | Loss: 0.1849\n",
      "Epoch 200 | Loss: 0.1849\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.4611\n",
      "Epoch 20 | Loss: 0.3300\n",
      "Epoch 40 | Loss: 0.2917\n",
      "Epoch 60 | Loss: 0.2732\n",
      "Epoch 80 | Loss: 0.2595\n",
      "Epoch 100 | Loss: 0.2523\n",
      "Epoch 120 | Loss: 0.2485\n",
      "Epoch 140 | Loss: 0.2396\n",
      "Epoch 160 | Loss: 0.2350\n",
      "Epoch 180 | Loss: 0.2320\n",
      "Epoch 200 | Loss: 0.2258\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.5824\n",
      "Epoch 20 | Loss: 0.3127\n",
      "Epoch 40 | Loss: 0.2816\n",
      "Epoch 60 | Loss: 0.2658\n",
      "Epoch 80 | Loss: 0.2523\n",
      "Epoch 100 | Loss: 0.2417\n",
      "Epoch 120 | Loss: 0.2385\n",
      "Epoch 140 | Loss: 0.2319\n",
      "Epoch 160 | Loss: 0.2278\n",
      "Epoch 180 | Loss: 0.2238\n",
      "Epoch 200 | Loss: 0.2168\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 3.5670\n",
      "Epoch 20 | Loss: 0.2266\n",
      "Epoch 40 | Loss: 0.1767\n",
      "Epoch 60 | Loss: 0.1645\n",
      "Epoch 80 | Loss: 0.1559\n",
      "Epoch 100 | Loss: 0.1457\n",
      "Epoch 120 | Loss: 0.1434\n",
      "Epoch 140 | Loss: 0.1416\n",
      "Epoch 160 | Loss: 0.1312\n",
      "Epoch 180 | Loss: 0.1301\n",
      "Epoch 200 | Loss: 0.1259\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7099\n",
      "Epoch 20 | Loss: 0.2917\n",
      "Epoch 40 | Loss: 0.2607\n",
      "Epoch 60 | Loss: 0.2367\n",
      "Epoch 80 | Loss: 0.2225\n",
      "Epoch 100 | Loss: 0.2121\n",
      "Epoch 120 | Loss: 0.2078\n",
      "Epoch 140 | Loss: 0.2001\n",
      "Epoch 160 | Loss: 0.1949\n",
      "Epoch 180 | Loss: 0.1912\n",
      "Epoch 200 | Loss: 0.1859\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8099\n",
      "Epoch 20 | Loss: 0.3250\n",
      "Epoch 40 | Loss: 0.2885\n",
      "Epoch 60 | Loss: 0.2695\n",
      "Epoch 80 | Loss: 0.2589\n",
      "Epoch 100 | Loss: 0.2474\n",
      "Epoch 120 | Loss: 0.2414\n",
      "Epoch 140 | Loss: 0.2383\n",
      "Epoch 160 | Loss: 0.2330\n",
      "Epoch 180 | Loss: 0.2297\n",
      "Epoch 200 | Loss: 0.2301\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.9917\n",
      "Epoch 20 | Loss: 0.3517\n",
      "Epoch 40 | Loss: 0.3099\n",
      "Epoch 60 | Loss: 0.2988\n",
      "Epoch 80 | Loss: 0.2822\n",
      "Epoch 100 | Loss: 0.2710\n",
      "Epoch 120 | Loss: 0.2651\n",
      "Epoch 140 | Loss: 0.2597\n",
      "Epoch 160 | Loss: 0.2513\n",
      "Epoch 180 | Loss: 0.2501\n",
      "Epoch 200 | Loss: 0.2447\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6486\n",
      "Epoch 20 | Loss: 0.2166\n",
      "Epoch 40 | Loss: 0.1886\n",
      "Epoch 60 | Loss: 0.1673\n",
      "Epoch 80 | Loss: 0.1525\n",
      "Epoch 100 | Loss: 0.1419\n",
      "Epoch 120 | Loss: 0.1342\n",
      "Epoch 140 | Loss: 0.1202\n",
      "Epoch 160 | Loss: 0.1198\n",
      "Epoch 180 | Loss: 0.1112\n",
      "Epoch 200 | Loss: 0.1054\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.5308\n",
      "Epoch 20 | Loss: 0.3160\n",
      "Epoch 40 | Loss: 0.2802\n",
      "Epoch 60 | Loss: 0.2621\n",
      "Epoch 80 | Loss: 0.2501\n",
      "Epoch 100 | Loss: 0.2320\n",
      "Epoch 120 | Loss: 0.2249\n",
      "Epoch 140 | Loss: 0.2226\n",
      "Epoch 160 | Loss: 0.2173\n",
      "Epoch 180 | Loss: 0.2111\n",
      "Epoch 200 | Loss: 0.2047\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.4283\n",
      "Epoch 20 | Loss: 0.3537\n",
      "Epoch 40 | Loss: 0.3111\n",
      "Epoch 60 | Loss: 0.3000\n",
      "Epoch 80 | Loss: 0.2786\n",
      "Epoch 100 | Loss: 0.2728\n",
      "Epoch 120 | Loss: 0.2615\n",
      "Epoch 140 | Loss: 0.2532\n",
      "Epoch 160 | Loss: 0.2465\n",
      "Epoch 180 | Loss: 0.2412\n",
      "Epoch 200 | Loss: 0.2432\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.4454\n",
      "Epoch 20 | Loss: 0.3658\n",
      "Epoch 40 | Loss: 0.3203\n",
      "Epoch 60 | Loss: 0.3016\n",
      "Epoch 80 | Loss: 0.2913\n",
      "Epoch 100 | Loss: 0.2800\n",
      "Epoch 120 | Loss: 0.2743\n",
      "Epoch 140 | Loss: 0.2666\n",
      "Epoch 160 | Loss: 0.2665\n",
      "Epoch 180 | Loss: 0.2607\n",
      "Epoch 200 | Loss: 0.2527\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6162\n",
      "Epoch 20 | Loss: 0.2740\n",
      "Epoch 40 | Loss: 0.2284\n",
      "Epoch 60 | Loss: 0.1961\n",
      "Epoch 80 | Loss: 0.1723\n",
      "Epoch 100 | Loss: 0.1559\n",
      "Epoch 120 | Loss: 0.1469\n",
      "Epoch 140 | Loss: 0.1414\n",
      "Epoch 160 | Loss: 0.1304\n",
      "Epoch 180 | Loss: 0.1198\n",
      "Epoch 200 | Loss: 0.1249\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7175\n",
      "Epoch 20 | Loss: 0.3177\n",
      "Epoch 40 | Loss: 0.2647\n",
      "Epoch 60 | Loss: 0.2410\n",
      "Epoch 80 | Loss: 0.2183\n",
      "Epoch 100 | Loss: 0.2139\n",
      "Epoch 120 | Loss: 0.1998\n",
      "Epoch 140 | Loss: 0.1934\n",
      "Epoch 160 | Loss: 0.1923\n",
      "Epoch 180 | Loss: 0.1854\n",
      "Epoch 200 | Loss: 0.1804\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9626\n",
      "Epoch 20 | Loss: 0.3222\n",
      "Epoch 40 | Loss: 0.2832\n",
      "Epoch 60 | Loss: 0.2613\n",
      "Epoch 80 | Loss: 0.2519\n",
      "Epoch 100 | Loss: 0.2401\n",
      "Epoch 120 | Loss: 0.2321\n",
      "Epoch 140 | Loss: 0.2273\n",
      "Epoch 160 | Loss: 0.2181\n",
      "Epoch 180 | Loss: 0.2152\n",
      "Epoch 200 | Loss: 0.2106\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.3704\n",
      "Epoch 20 | Loss: 0.3408\n",
      "Epoch 40 | Loss: 0.2945\n",
      "Epoch 60 | Loss: 0.2750\n",
      "Epoch 80 | Loss: 0.2643\n",
      "Epoch 100 | Loss: 0.2530\n",
      "Epoch 120 | Loss: 0.2430\n",
      "Epoch 140 | Loss: 0.2359\n",
      "Epoch 160 | Loss: 0.2327\n",
      "Epoch 180 | Loss: 0.2260\n",
      "Epoch 200 | Loss: 0.2225\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.0441\n",
      "Epoch 20 | Loss: 0.2920\n",
      "Epoch 40 | Loss: 0.2484\n",
      "Epoch 60 | Loss: 0.2115\n",
      "Epoch 80 | Loss: 0.1852\n",
      "Epoch 100 | Loss: 0.1620\n",
      "Epoch 120 | Loss: 0.1563\n",
      "Epoch 140 | Loss: 0.1433\n",
      "Epoch 160 | Loss: 0.1335\n",
      "Epoch 180 | Loss: 0.1552\n",
      "Epoch 200 | Loss: 0.1309\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.8854\n",
      "Epoch 20 | Loss: 0.2123\n",
      "Epoch 40 | Loss: 0.1804\n",
      "Epoch 60 | Loss: 0.1604\n",
      "Epoch 80 | Loss: 0.1457\n",
      "Epoch 100 | Loss: 0.1370\n",
      "Epoch 120 | Loss: 0.1271\n",
      "Epoch 140 | Loss: 0.1294\n",
      "Epoch 160 | Loss: 0.1205\n",
      "Epoch 180 | Loss: 0.1144\n",
      "Epoch 200 | Loss: 0.1138\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8052\n",
      "Epoch 20 | Loss: 0.1734\n",
      "Epoch 40 | Loss: 0.1520\n",
      "Epoch 60 | Loss: 0.1405\n",
      "Epoch 80 | Loss: 0.1305\n",
      "Epoch 100 | Loss: 0.1231\n",
      "Epoch 120 | Loss: 0.1177\n",
      "Epoch 140 | Loss: 0.1147\n",
      "Epoch 160 | Loss: 0.1120\n",
      "Epoch 180 | Loss: 0.1091\n",
      "Epoch 200 | Loss: 0.1095\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7222\n",
      "Epoch 20 | Loss: 0.1768\n",
      "Epoch 40 | Loss: 0.1574\n",
      "Epoch 60 | Loss: 0.1425\n",
      "Epoch 80 | Loss: 0.1331\n",
      "Epoch 100 | Loss: 0.1258\n",
      "Epoch 120 | Loss: 0.1194\n",
      "Epoch 140 | Loss: 0.1135\n",
      "Epoch 160 | Loss: 0.1137\n",
      "Epoch 180 | Loss: 0.1084\n",
      "Epoch 200 | Loss: 0.1067\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.0079\n",
      "Epoch 20 | Loss: 0.2172\n",
      "Epoch 40 | Loss: 0.1776\n",
      "Epoch 60 | Loss: 0.1627\n",
      "Epoch 80 | Loss: 0.1526\n",
      "Epoch 100 | Loss: 0.1455\n",
      "Epoch 120 | Loss: 0.1401\n",
      "Epoch 140 | Loss: 0.1358\n",
      "Epoch 160 | Loss: 0.1322\n",
      "Epoch 180 | Loss: 0.1291\n",
      "Epoch 200 | Loss: 0.1264\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7024\n",
      "Epoch 20 | Loss: 0.2957\n",
      "Epoch 40 | Loss: 0.2660\n",
      "Epoch 60 | Loss: 0.2516\n",
      "Epoch 80 | Loss: 0.2417\n",
      "Epoch 100 | Loss: 0.2340\n",
      "Epoch 120 | Loss: 0.2278\n",
      "Epoch 140 | Loss: 0.2227\n",
      "Epoch 160 | Loss: 0.2182\n",
      "Epoch 180 | Loss: 0.2144\n",
      "Epoch 200 | Loss: 0.2109\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.4978\n",
      "Epoch 20 | Loss: 0.3216\n",
      "Epoch 40 | Loss: 0.2949\n",
      "Epoch 60 | Loss: 0.2803\n",
      "Epoch 80 | Loss: 0.2702\n",
      "Epoch 100 | Loss: 0.2622\n",
      "Epoch 120 | Loss: 0.2555\n",
      "Epoch 140 | Loss: 0.2497\n",
      "Epoch 160 | Loss: 0.2447\n",
      "Epoch 180 | Loss: 0.2402\n",
      "Epoch 200 | Loss: 0.2362\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.7816\n",
      "Epoch 20 | Loss: 0.3992\n",
      "Epoch 40 | Loss: 0.3444\n",
      "Epoch 60 | Loss: 0.3230\n",
      "Epoch 80 | Loss: 0.3108\n",
      "Epoch 100 | Loss: 0.3022\n",
      "Epoch 120 | Loss: 0.2958\n",
      "Epoch 140 | Loss: 0.2907\n",
      "Epoch 160 | Loss: 0.2862\n",
      "Epoch 180 | Loss: 0.2824\n",
      "Epoch 200 | Loss: 0.2790\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.6676\n",
      "Epoch 20 | Loss: 0.2272\n",
      "Epoch 40 | Loss: 0.1939\n",
      "Epoch 60 | Loss: 0.1767\n",
      "Epoch 80 | Loss: 0.1663\n",
      "Epoch 100 | Loss: 0.1592\n",
      "Epoch 120 | Loss: 0.1540\n",
      "Epoch 140 | Loss: 0.1496\n",
      "Epoch 160 | Loss: 0.1458\n",
      "Epoch 180 | Loss: 0.1424\n",
      "Epoch 200 | Loss: 0.1392\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.7147\n",
      "Epoch 20 | Loss: 0.3284\n",
      "Epoch 40 | Loss: 0.2868\n",
      "Epoch 60 | Loss: 0.2675\n",
      "Epoch 80 | Loss: 0.2548\n",
      "Epoch 100 | Loss: 0.2457\n",
      "Epoch 120 | Loss: 0.2384\n",
      "Epoch 140 | Loss: 0.2323\n",
      "Epoch 160 | Loss: 0.2272\n",
      "Epoch 180 | Loss: 0.2227\n",
      "Epoch 200 | Loss: 0.2186\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.8268\n",
      "Epoch 20 | Loss: 0.3717\n",
      "Epoch 40 | Loss: 0.3390\n",
      "Epoch 60 | Loss: 0.3213\n",
      "Epoch 80 | Loss: 0.3084\n",
      "Epoch 100 | Loss: 0.2983\n",
      "Epoch 120 | Loss: 0.2901\n",
      "Epoch 140 | Loss: 0.2834\n",
      "Epoch 160 | Loss: 0.2775\n",
      "Epoch 180 | Loss: 0.2724\n",
      "Epoch 200 | Loss: 0.2679\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7557\n",
      "Epoch 20 | Loss: 0.3966\n",
      "Epoch 40 | Loss: 0.3532\n",
      "Epoch 60 | Loss: 0.3270\n",
      "Epoch 80 | Loss: 0.3117\n",
      "Epoch 100 | Loss: 0.3007\n",
      "Epoch 120 | Loss: 0.2918\n",
      "Epoch 140 | Loss: 0.2844\n",
      "Epoch 160 | Loss: 0.2780\n",
      "Epoch 180 | Loss: 0.2724\n",
      "Epoch 200 | Loss: 0.2675\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.3046\n",
      "Epoch 20 | Loss: 0.2801\n",
      "Epoch 40 | Loss: 0.2391\n",
      "Epoch 60 | Loss: 0.2178\n",
      "Epoch 80 | Loss: 0.2050\n",
      "Epoch 100 | Loss: 0.1962\n",
      "Epoch 120 | Loss: 0.1899\n",
      "Epoch 140 | Loss: 0.1848\n",
      "Epoch 160 | Loss: 0.1804\n",
      "Epoch 180 | Loss: 0.1766\n",
      "Epoch 200 | Loss: 0.1730\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.0855\n",
      "Epoch 20 | Loss: 0.3876\n",
      "Epoch 40 | Loss: 0.3313\n",
      "Epoch 60 | Loss: 0.3079\n",
      "Epoch 80 | Loss: 0.2935\n",
      "Epoch 100 | Loss: 0.2833\n",
      "Epoch 120 | Loss: 0.2754\n",
      "Epoch 140 | Loss: 0.2688\n",
      "Epoch 160 | Loss: 0.2630\n",
      "Epoch 180 | Loss: 0.2577\n",
      "Epoch 200 | Loss: 0.2529\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9239\n",
      "Epoch 20 | Loss: 0.4161\n",
      "Epoch 40 | Loss: 0.3661\n",
      "Epoch 60 | Loss: 0.3417\n",
      "Epoch 80 | Loss: 0.3259\n",
      "Epoch 100 | Loss: 0.3145\n",
      "Epoch 120 | Loss: 0.3059\n",
      "Epoch 140 | Loss: 0.2987\n",
      "Epoch 160 | Loss: 0.2924\n",
      "Epoch 180 | Loss: 0.2869\n",
      "Epoch 200 | Loss: 0.2819\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7098\n",
      "Epoch 20 | Loss: 0.4173\n",
      "Epoch 40 | Loss: 0.3675\n",
      "Epoch 60 | Loss: 0.3422\n",
      "Epoch 80 | Loss: 0.3265\n",
      "Epoch 100 | Loss: 0.3145\n",
      "Epoch 120 | Loss: 0.3048\n",
      "Epoch 140 | Loss: 0.2965\n",
      "Epoch 160 | Loss: 0.2892\n",
      "Epoch 180 | Loss: 0.2828\n",
      "Epoch 200 | Loss: 0.2770\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.5516\n",
      "Epoch 20 | Loss: 0.3000\n",
      "Epoch 40 | Loss: 0.2502\n",
      "Epoch 60 | Loss: 0.2286\n",
      "Epoch 80 | Loss: 0.2148\n",
      "Epoch 100 | Loss: 0.2045\n",
      "Epoch 120 | Loss: 0.1959\n",
      "Epoch 140 | Loss: 0.1887\n",
      "Epoch 160 | Loss: 0.1822\n",
      "Epoch 180 | Loss: 0.1760\n",
      "Epoch 200 | Loss: 0.1702\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.1425\n",
      "Epoch 20 | Loss: 0.4125\n",
      "Epoch 40 | Loss: 0.3640\n",
      "Epoch 60 | Loss: 0.3405\n",
      "Epoch 80 | Loss: 0.3252\n",
      "Epoch 100 | Loss: 0.3133\n",
      "Epoch 120 | Loss: 0.3034\n",
      "Epoch 140 | Loss: 0.2948\n",
      "Epoch 160 | Loss: 0.2872\n",
      "Epoch 180 | Loss: 0.2804\n",
      "Epoch 200 | Loss: 0.2741\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.6207\n",
      "Epoch 20 | Loss: 0.4018\n",
      "Epoch 40 | Loss: 0.3502\n",
      "Epoch 60 | Loss: 0.3275\n",
      "Epoch 80 | Loss: 0.3122\n",
      "Epoch 100 | Loss: 0.3005\n",
      "Epoch 120 | Loss: 0.2905\n",
      "Epoch 140 | Loss: 0.2821\n",
      "Epoch 160 | Loss: 0.2747\n",
      "Epoch 180 | Loss: 0.2684\n",
      "Epoch 200 | Loss: 0.2627\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7166\n",
      "Epoch 20 | Loss: 0.4377\n",
      "Epoch 40 | Loss: 0.3796\n",
      "Epoch 60 | Loss: 0.3529\n",
      "Epoch 80 | Loss: 0.3366\n",
      "Epoch 100 | Loss: 0.3241\n",
      "Epoch 120 | Loss: 0.3136\n",
      "Epoch 140 | Loss: 0.3048\n",
      "Epoch 160 | Loss: 0.2973\n",
      "Epoch 180 | Loss: 0.2909\n",
      "Epoch 200 | Loss: 0.2853\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.0786\n",
      "Epoch 20 | Loss: 0.4113\n",
      "Epoch 40 | Loss: 0.3481\n",
      "Epoch 60 | Loss: 0.3150\n",
      "Epoch 80 | Loss: 0.2942\n",
      "Epoch 100 | Loss: 0.2789\n",
      "Epoch 120 | Loss: 0.2661\n",
      "Epoch 140 | Loss: 0.2549\n",
      "Epoch 160 | Loss: 0.2448\n",
      "Epoch 180 | Loss: 0.2356\n",
      "Epoch 200 | Loss: 0.2271\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 1.1153\n",
      "Epoch 20 | Loss: 0.4577\n",
      "Epoch 40 | Loss: 0.3902\n",
      "Epoch 60 | Loss: 0.3565\n",
      "Epoch 80 | Loss: 0.3343\n",
      "Epoch 100 | Loss: 0.3180\n",
      "Epoch 120 | Loss: 0.3056\n",
      "Epoch 140 | Loss: 0.2956\n",
      "Epoch 160 | Loss: 0.2871\n",
      "Epoch 180 | Loss: 0.2794\n",
      "Epoch 200 | Loss: 0.2726\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.4699\n",
      "Epoch 20 | Loss: 0.4444\n",
      "Epoch 40 | Loss: 0.3564\n",
      "Epoch 60 | Loss: 0.3300\n",
      "Epoch 80 | Loss: 0.3135\n",
      "Epoch 100 | Loss: 0.3021\n",
      "Epoch 120 | Loss: 0.2932\n",
      "Epoch 140 | Loss: 0.2857\n",
      "Epoch 160 | Loss: 0.2793\n",
      "Epoch 180 | Loss: 0.2738\n",
      "Epoch 200 | Loss: 0.2688\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8819\n",
      "Epoch 20 | Loss: 0.4289\n",
      "Epoch 40 | Loss: 0.3646\n",
      "Epoch 60 | Loss: 0.3330\n",
      "Epoch 80 | Loss: 0.3148\n",
      "Epoch 100 | Loss: 0.3019\n",
      "Epoch 120 | Loss: 0.2914\n",
      "Epoch 140 | Loss: 0.2825\n",
      "Epoch 160 | Loss: 0.2746\n",
      "Epoch 180 | Loss: 0.2676\n",
      "Epoch 200 | Loss: 0.2612\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.9623\n",
      "Epoch 20 | Loss: 0.3963\n",
      "Epoch 40 | Loss: 0.3319\n",
      "Epoch 60 | Loss: 0.3015\n",
      "Epoch 80 | Loss: 0.2798\n",
      "Epoch 100 | Loss: 0.2627\n",
      "Epoch 120 | Loss: 0.2485\n",
      "Epoch 140 | Loss: 0.2361\n",
      "Epoch 160 | Loss: 0.2250\n",
      "Epoch 180 | Loss: 0.2149\n",
      "Epoch 200 | Loss: 0.2057\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9256\n",
      "Epoch 20 | Loss: 0.2904\n",
      "Epoch 40 | Loss: 0.2380\n",
      "Epoch 60 | Loss: 0.2151\n",
      "Epoch 80 | Loss: 0.2013\n",
      "Epoch 100 | Loss: 0.1913\n",
      "Epoch 120 | Loss: 0.1836\n",
      "Epoch 140 | Loss: 0.1771\n",
      "Epoch 160 | Loss: 0.1716\n",
      "Epoch 180 | Loss: 0.1667\n",
      "Epoch 200 | Loss: 0.1621\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.1739\n",
      "Epoch 20 | Loss: 0.3374\n",
      "Epoch 40 | Loss: 0.2232\n",
      "Epoch 60 | Loss: 0.1938\n",
      "Epoch 80 | Loss: 0.1794\n",
      "Epoch 100 | Loss: 0.1701\n",
      "Epoch 120 | Loss: 0.1634\n",
      "Epoch 140 | Loss: 0.1581\n",
      "Epoch 160 | Loss: 0.1539\n",
      "Epoch 180 | Loss: 0.1504\n",
      "Epoch 200 | Loss: 0.1475\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8683\n",
      "Epoch 20 | Loss: 0.2568\n",
      "Epoch 40 | Loss: 0.2014\n",
      "Epoch 60 | Loss: 0.1813\n",
      "Epoch 80 | Loss: 0.1692\n",
      "Epoch 100 | Loss: 0.1613\n",
      "Epoch 120 | Loss: 0.1557\n",
      "Epoch 140 | Loss: 0.1514\n",
      "Epoch 160 | Loss: 0.1479\n",
      "Epoch 180 | Loss: 0.1447\n",
      "Epoch 200 | Loss: 0.1417\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.75}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.2265\n",
      "Epoch 20 | Loss: 0.2114\n",
      "Epoch 40 | Loss: 0.1925\n",
      "Epoch 60 | Loss: 0.1729\n",
      "Epoch 80 | Loss: 0.1618\n",
      "Epoch 100 | Loss: 0.1583\n",
      "Epoch 120 | Loss: 0.1508\n",
      "Epoch 140 | Loss: 0.1443\n",
      "Epoch 160 | Loss: 0.1420\n",
      "Epoch 180 | Loss: 0.1368\n",
      "Epoch 200 | Loss: 0.1359\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.4902\n",
      "Epoch 20 | Loss: 0.2969\n",
      "Epoch 40 | Loss: 0.2646\n",
      "Epoch 60 | Loss: 0.2479\n",
      "Epoch 80 | Loss: 0.2393\n",
      "Epoch 100 | Loss: 0.2333\n",
      "Epoch 120 | Loss: 0.2230\n",
      "Epoch 140 | Loss: 0.2184\n",
      "Epoch 160 | Loss: 0.2116\n",
      "Epoch 180 | Loss: 0.2126\n",
      "Epoch 200 | Loss: 0.2071\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.7127\n",
      "Epoch 20 | Loss: 0.3648\n",
      "Epoch 40 | Loss: 0.3264\n",
      "Epoch 60 | Loss: 0.3083\n",
      "Epoch 80 | Loss: 0.2958\n",
      "Epoch 100 | Loss: 0.2896\n",
      "Epoch 120 | Loss: 0.2777\n",
      "Epoch 140 | Loss: 0.2767\n",
      "Epoch 160 | Loss: 0.2715\n",
      "Epoch 180 | Loss: 0.2671\n",
      "Epoch 200 | Loss: 0.2587\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7285\n",
      "Epoch 20 | Loss: 0.3800\n",
      "Epoch 40 | Loss: 0.3391\n",
      "Epoch 60 | Loss: 0.3154\n",
      "Epoch 80 | Loss: 0.3076\n",
      "Epoch 100 | Loss: 0.2999\n",
      "Epoch 120 | Loss: 0.2921\n",
      "Epoch 140 | Loss: 0.2896\n",
      "Epoch 160 | Loss: 0.2837\n",
      "Epoch 180 | Loss: 0.2796\n",
      "Epoch 200 | Loss: 0.2746\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.8}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.5368\n",
      "Epoch 20 | Loss: 0.2206\n",
      "Epoch 40 | Loss: 0.1954\n",
      "Epoch 60 | Loss: 0.1790\n",
      "Epoch 80 | Loss: 0.1720\n",
      "Epoch 100 | Loss: 0.1634\n",
      "Epoch 120 | Loss: 0.1584\n",
      "Epoch 140 | Loss: 0.1569\n",
      "Epoch 160 | Loss: 0.1529\n",
      "Epoch 180 | Loss: 0.1444\n",
      "Epoch 200 | Loss: 0.1370\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.8408\n",
      "Epoch 20 | Loss: 0.3464\n",
      "Epoch 40 | Loss: 0.3048\n",
      "Epoch 60 | Loss: 0.2842\n",
      "Epoch 80 | Loss: 0.2738\n",
      "Epoch 100 | Loss: 0.2658\n",
      "Epoch 120 | Loss: 0.2603\n",
      "Epoch 140 | Loss: 0.2542\n",
      "Epoch 160 | Loss: 0.2491\n",
      "Epoch 180 | Loss: 0.2472\n",
      "Epoch 200 | Loss: 0.2386\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 2.3049\n",
      "Epoch 20 | Loss: 0.4940\n",
      "Epoch 40 | Loss: 0.3904\n",
      "Epoch 60 | Loss: 0.3665\n",
      "Epoch 80 | Loss: 0.3521\n",
      "Epoch 100 | Loss: 0.3405\n",
      "Epoch 120 | Loss: 0.3300\n",
      "Epoch 140 | Loss: 0.3275\n",
      "Epoch 160 | Loss: 0.3152\n",
      "Epoch 180 | Loss: 0.3105\n",
      "Epoch 200 | Loss: 0.3106\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.6315\n",
      "Epoch 20 | Loss: 0.3894\n",
      "Epoch 40 | Loss: 0.3536\n",
      "Epoch 60 | Loss: 0.3307\n",
      "Epoch 80 | Loss: 0.3177\n",
      "Epoch 100 | Loss: 0.3130\n",
      "Epoch 120 | Loss: 0.3039\n",
      "Epoch 140 | Loss: 0.2969\n",
      "Epoch 160 | Loss: 0.2939\n",
      "Epoch 180 | Loss: 0.2881\n",
      "Epoch 200 | Loss: 0.2852\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.85}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.3568\n",
      "Epoch 20 | Loss: 0.2757\n",
      "Epoch 40 | Loss: 0.2408\n",
      "Epoch 60 | Loss: 0.2260\n",
      "Epoch 80 | Loss: 0.2112\n",
      "Epoch 100 | Loss: 0.2034\n",
      "Epoch 120 | Loss: 0.1955\n",
      "Epoch 140 | Loss: 0.1887\n",
      "Epoch 160 | Loss: 0.1825\n",
      "Epoch 180 | Loss: 0.1785\n",
      "Epoch 200 | Loss: 0.1777\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.6051\n",
      "Epoch 20 | Loss: 0.3671\n",
      "Epoch 40 | Loss: 0.3238\n",
      "Epoch 60 | Loss: 0.3060\n",
      "Epoch 80 | Loss: 0.2889\n",
      "Epoch 100 | Loss: 0.2830\n",
      "Epoch 120 | Loss: 0.2669\n",
      "Epoch 140 | Loss: 0.2653\n",
      "Epoch 160 | Loss: 0.2558\n",
      "Epoch 180 | Loss: 0.2477\n",
      "Epoch 200 | Loss: 0.2437\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9480\n",
      "Epoch 20 | Loss: 0.4302\n",
      "Epoch 40 | Loss: 0.3847\n",
      "Epoch 60 | Loss: 0.3603\n",
      "Epoch 80 | Loss: 0.3504\n",
      "Epoch 100 | Loss: 0.3411\n",
      "Epoch 120 | Loss: 0.3304\n",
      "Epoch 140 | Loss: 0.3221\n",
      "Epoch 160 | Loss: 0.3139\n",
      "Epoch 180 | Loss: 0.3119\n",
      "Epoch 200 | Loss: 0.3053\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.8164\n",
      "Epoch 20 | Loss: 0.4304\n",
      "Epoch 40 | Loss: 0.3819\n",
      "Epoch 60 | Loss: 0.3661\n",
      "Epoch 80 | Loss: 0.3453\n",
      "Epoch 100 | Loss: 0.3392\n",
      "Epoch 120 | Loss: 0.3302\n",
      "Epoch 140 | Loss: 0.3246\n",
      "Epoch 160 | Loss: 0.3249\n",
      "Epoch 180 | Loss: 0.3121\n",
      "Epoch 200 | Loss: 0.3115\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.9}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 2.6083\n",
      "Epoch 20 | Loss: 0.4492\n",
      "Epoch 40 | Loss: 0.3180\n",
      "Epoch 60 | Loss: 0.2968\n",
      "Epoch 80 | Loss: 0.2833\n",
      "Epoch 100 | Loss: 0.2639\n",
      "Epoch 120 | Loss: 0.2528\n",
      "Epoch 140 | Loss: 0.2525\n",
      "Epoch 160 | Loss: 0.2488\n",
      "Epoch 180 | Loss: 0.2386\n",
      "Epoch 200 | Loss: 0.2363\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9498\n",
      "Epoch 20 | Loss: 0.4488\n",
      "Epoch 40 | Loss: 0.3884\n",
      "Epoch 60 | Loss: 0.3584\n",
      "Epoch 80 | Loss: 0.3374\n",
      "Epoch 100 | Loss: 0.3319\n",
      "Epoch 120 | Loss: 0.3208\n",
      "Epoch 140 | Loss: 0.3110\n",
      "Epoch 160 | Loss: 0.3006\n",
      "Epoch 180 | Loss: 0.2953\n",
      "Epoch 200 | Loss: 0.2902\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.7907\n",
      "Epoch 20 | Loss: 0.4325\n",
      "Epoch 40 | Loss: 0.3884\n",
      "Epoch 60 | Loss: 0.3680\n",
      "Epoch 80 | Loss: 0.3469\n",
      "Epoch 100 | Loss: 0.3380\n",
      "Epoch 120 | Loss: 0.3225\n",
      "Epoch 140 | Loss: 0.3148\n",
      "Epoch 160 | Loss: 0.3164\n",
      "Epoch 180 | Loss: 0.3107\n",
      "Epoch 200 | Loss: 0.3022\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 1.0831\n",
      "Epoch 20 | Loss: 0.4523\n",
      "Epoch 40 | Loss: 0.4057\n",
      "Epoch 60 | Loss: 0.3781\n",
      "Epoch 80 | Loss: 0.3656\n",
      "Epoch 100 | Loss: 0.3575\n",
      "Epoch 120 | Loss: 0.3461\n",
      "Epoch 140 | Loss: 0.3332\n",
      "Epoch 160 | Loss: 0.3304\n",
      "Epoch 180 | Loss: 0.3264\n",
      "Epoch 200 | Loss: 0.3195\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.95}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 1.5807\n",
      "Epoch 20 | Loss: 0.4382\n",
      "Epoch 40 | Loss: 0.3402\n",
      "Epoch 60 | Loss: 0.3072\n",
      "Epoch 80 | Loss: 0.3013\n",
      "Epoch 100 | Loss: 0.2798\n",
      "Epoch 120 | Loss: 0.2716\n",
      "Epoch 140 | Loss: 0.2619\n",
      "Epoch 160 | Loss: 0.2476\n",
      "Epoch 180 | Loss: 0.2462\n",
      "Epoch 200 | Loss: 0.2343\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.9169\n",
      "Epoch 20 | Loss: 0.4784\n",
      "Epoch 40 | Loss: 0.3957\n",
      "Epoch 60 | Loss: 0.3670\n",
      "Epoch 80 | Loss: 0.3453\n",
      "Epoch 100 | Loss: 0.3182\n",
      "Epoch 120 | Loss: 0.3142\n",
      "Epoch 140 | Loss: 0.3011\n",
      "Epoch 160 | Loss: 0.2996\n",
      "Epoch 180 | Loss: 0.2953\n",
      "Epoch 200 | Loss: 0.2819\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 1.0159\n",
      "Epoch 20 | Loss: 0.4466\n",
      "Epoch 40 | Loss: 0.3899\n",
      "Epoch 60 | Loss: 0.3639\n",
      "Epoch 80 | Loss: 0.3447\n",
      "Epoch 100 | Loss: 0.3279\n",
      "Epoch 120 | Loss: 0.3223\n",
      "Epoch 140 | Loss: 0.3113\n",
      "Epoch 160 | Loss: 0.3030\n",
      "Epoch 180 | Loss: 0.2958\n",
      "Epoch 200 | Loss: 0.2915\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7219\n",
      "Epoch 20 | Loss: 0.4025\n",
      "Epoch 40 | Loss: 0.3663\n",
      "Epoch 60 | Loss: 0.3418\n",
      "Epoch 80 | Loss: 0.3265\n",
      "Epoch 100 | Loss: 0.3198\n",
      "Epoch 120 | Loss: 0.3065\n",
      "Epoch 140 | Loss: 0.3000\n",
      "Epoch 160 | Loss: 0.2901\n",
      "Epoch 180 | Loss: 0.2892\n",
      "Epoch 200 | Loss: 0.2804\n",
      "\n",
      "Running config: {'hidden_dim': 64, 'lr': 0.001, 'dropout': 0.3, 'class_weight_1': 0.99}\n",
      "Fold 1/4\n",
      "Epoch 0 | Loss: 0.8253\n",
      "Epoch 20 | Loss: 0.4155\n",
      "Epoch 40 | Loss: 0.3661\n",
      "Epoch 60 | Loss: 0.3182\n",
      "Epoch 80 | Loss: 0.2922\n",
      "Epoch 100 | Loss: 0.2850\n",
      "Epoch 120 | Loss: 0.2773\n",
      "Epoch 140 | Loss: 0.2644\n",
      "Epoch 160 | Loss: 0.2589\n",
      "Epoch 180 | Loss: 0.2461\n",
      "Epoch 200 | Loss: 0.2304\n",
      "Fold 2/4\n",
      "Epoch 0 | Loss: 0.8522\n",
      "Epoch 20 | Loss: 0.3098\n",
      "Epoch 40 | Loss: 0.2527\n",
      "Epoch 60 | Loss: 0.2282\n",
      "Epoch 80 | Loss: 0.2138\n",
      "Epoch 100 | Loss: 0.2021\n",
      "Epoch 120 | Loss: 0.2002\n",
      "Epoch 140 | Loss: 0.1931\n",
      "Epoch 160 | Loss: 0.1870\n",
      "Epoch 180 | Loss: 0.1794\n",
      "Epoch 200 | Loss: 0.1781\n",
      "Fold 3/4\n",
      "Epoch 0 | Loss: 0.9353\n",
      "Epoch 20 | Loss: 0.2626\n",
      "Epoch 40 | Loss: 0.2086\n",
      "Epoch 60 | Loss: 0.1950\n",
      "Epoch 80 | Loss: 0.1821\n",
      "Epoch 100 | Loss: 0.1765\n",
      "Epoch 120 | Loss: 0.1684\n",
      "Epoch 140 | Loss: 0.1622\n",
      "Epoch 160 | Loss: 0.1552\n",
      "Epoch 180 | Loss: 0.1564\n",
      "Epoch 200 | Loss: 0.1537\n",
      "Fold 4/4\n",
      "Epoch 0 | Loss: 0.7626\n",
      "Epoch 20 | Loss: 0.2775\n",
      "Epoch 40 | Loss: 0.2104\n",
      "Epoch 60 | Loss: 0.1904\n",
      "Epoch 80 | Loss: 0.1804\n",
      "Epoch 100 | Loss: 0.1772\n",
      "Epoch 120 | Loss: 0.1713\n",
      "Epoch 140 | Loss: 0.1662\n",
      "Epoch 160 | Loss: 0.1622\n",
      "Epoch 180 | Loss: 0.1597\n",
      "Epoch 200 | Loss: 0.1557\n",
      "\n",
      "Best Params: {'hidden_dim': 32, 'lr': 0.01, 'dropout': 0.3, 'class_weight_1': 0.75}\n",
      "Best Avg CV Metrics:\n",
      "f1: 0.6942\n",
      "precision: 0.6687\n",
      "recall: 0.7303\n",
      "roc_auc: 0.9170\n",
      "threshold: 0.4875\n"
     ]
    }
   ],
   "source": [
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "x_loc = torch.tensor(df_node[local_features].values, dtype=torch.float)\n",
    "y = torch.tensor(df_node['class'].values, dtype=torch.long)\n",
    "\n",
    "# PyG data object\n",
    "data = Data(x=x_loc, edge_index=edge_index, y=y, train_mask=train_known_mask, test_mask=test_known_mask)\n",
    "data = data.to(device)\n",
    "\n",
    "train_df = df_node[(df_node['timeStep'] <= 35) & (df_node['class']!=2)]\n",
    "cv = TimeStepSplit(train_df, n_splits=4)\n",
    "\n",
    "best_rocauc = 0\n",
    "best_params = None\n",
    "best_metrics = None\n",
    "\n",
    "for param_values in param_combinations:\n",
    "    params = dict(zip(param_names, param_values))\n",
    "    fold_scores = []\n",
    "    print(f\"\\nRunning config: {params}\")\n",
    "\n",
    "    for fold_idx, (train_idx, val_idx) in enumerate(cv.split(train_df), start=1):\n",
    "        print(f\"Fold {fold_idx}/{cv.get_n_splits()}\")\n",
    "\n",
    "        # Define new masks temporarily for this fold\n",
    "        fold_train_mask = torch.zeros(data.num_nodes, dtype=torch.bool)\n",
    "        fold_val_mask = torch.zeros(data.num_nodes, dtype=torch.bool)\n",
    "        fold_train_mask[train_idx] = True\n",
    "        fold_val_mask[val_idx] = True\n",
    "\n",
    "        model2 = GCN2(input_dim=data.x.shape[1],\n",
    "                    hidden_dim=params['hidden_dim'],\n",
    "                     dropout=params['dropout']).to(device)\n",
    "        optimizer = torch.optim.Adam(model2.parameters(), lr=params['lr'], weight_decay=5e-4)\n",
    "\n",
    "        class_weights = torch.tensor([1-params['class_weight_1'], params['class_weight_1']],dtype=torch.float)\n",
    "        criterion = nn.CrossEntropyLoss(weight=class_weights.to(device), ignore_index=2)\n",
    "\n",
    "        # Training loop\n",
    "        for epoch in range(201):\n",
    "            loss = train(model2, data, optimizer, criterion, train_mask=fold_train_mask)\n",
    "            if epoch % 20 == 0:\n",
    "                print(f\"Epoch {epoch} | Loss: {loss:.4f}\")\n",
    "\n",
    "        # Validation\n",
    "        metrics = evaluate(model2, data, eval_mask=fold_val_mask)\n",
    "        fold_scores.append(metrics)\n",
    "\n",
    "    avg_metrics = {k: sum(d[k] for d in fold_scores) / len(fold_scores) for k in fold_scores[0]}\n",
    "\n",
    "    if avg_metrics['roc_auc'] > best_rocauc:\n",
    "        best_rocauc = avg_metrics['roc_auc']\n",
    "        best_params = deepcopy(params)\n",
    "        best_metrics = deepcopy(avg_metrics)\n",
    "\n",
    "print(f\"\\nBest Params: {best_params}\")\n",
    "print(\"Best Avg CV Metrics:\")\n",
    "for k, v in best_metrics.items():\n",
    "    print(f\"{k}: {v:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "06e3f6c7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 0 | Loss: 0.7910\n",
      "Epoch 100 | Loss: 0.2640\n",
      "Epoch 200 | Loss: 0.2450\n",
      "Epoch 300 | Loss: 0.2329\n",
      "Epoch 400 | Loss: 0.2293\n",
      "Epoch 500 | Loss: 0.2248\n",
      "Epoch 600 | Loss: 0.2223\n",
      "Epoch 700 | Loss: 0.2187\n",
      "Epoch 800 | Loss: 0.2172\n",
      "Epoch 900 | Loss: 0.2152\n",
      "Epoch 1000 | Loss: 0.2152\n",
      "\n",
      "Final Test Set Metrics:\n",
      "f1: 0.4274\n",
      "precision: 0.4253\n",
      "recall: 0.4295\n",
      "roc_auc: 0.8416\n",
      "threshold: 0.7100\n"
     ]
    }
   ],
   "source": [
    "device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')\n",
    "\n",
    "x_loc = torch.tensor(df_node[local_features].values, dtype=torch.float)\n",
    "y = torch.tensor(df_node['class'].values, dtype=torch.long)\n",
    "\n",
    "# PyG data object\n",
    "data = Data(x=x_loc, edge_index=edge_index, y=y, train_mask=train_known_mask, test_mask=test_known_mask)\n",
    "data = data.to(device)\n",
    "\n",
    "model2 = GCN2(input_dim=x_loc.shape[1], hidden_dim=best_params['hidden_dim'], dropout=best_params['dropout']).to(device)\n",
    "\n",
    "class_weights = torch.tensor([1-best_params['class_weight_1'], best_params['class_weight_1']],dtype=torch.float)\n",
    "criterion = nn.CrossEntropyLoss(weight=class_weights.to(device), ignore_index=2)\n",
    "\n",
    "optimizer = torch.optim.Adam(model2.parameters(), lr=best_params['lr'], weight_decay=5e-4)\n",
    "\n",
    "# Train\n",
    "for epoch in range(1001):\n",
    "    loss = train(model2, data, optimizer, criterion, train_mask=train_known_mask)\n",
    "    \n",
    "    if epoch % 100 == 0:\n",
    "        print(f\"Epoch {epoch} | Loss: {loss:.4f}\")\n",
    "\n",
    "final_metrics = evaluate(model2, data, eval_mask=test_known_mask)\n",
    "print(\"\\nFinal Test Set Metrics:\")\n",
    "for k, v in final_metrics.items():\n",
    "    print(f\"{k}: {v:.4f}\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3b7660ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1400x1200 with 5 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "              precision    recall  f1-score   support\n",
      "\n",
      "       licit       0.96      0.99      0.97     14428\n",
      "     illicit       0.57      0.26      0.36       901\n",
      "\n",
      "    accuracy                           0.94     15329\n",
      "   macro avg       0.76      0.62      0.66     15329\n",
      "weighted avg       0.93      0.94      0.94     15329\n",
      "\n",
      "ROC AUC: 0.841596\n"
     ]
    }
   ],
   "source": [
    "model2.eval()\n",
    "with torch.no_grad():\n",
    "    logits = model2(data)\n",
    "    prob = F.softmax(logits, dim=1)[:, 1]\n",
    "\n",
    "y_test = data.y[data.test_mask].cpu().numpy()\n",
    "y_prob = prob[data.test_mask].cpu().numpy()\n",
    "y_pred = (y_prob >= metrics['threshold']).astype(int)\n",
    "\n",
    "plot_classification_results(y_test, y_prob, y_pred, '2-layer GCN (Local Features)')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8a16470f",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "48fda4b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "# class GCN3(nn.Module):\n",
    "#     def __init__(self, input_dim, hidden_dim=128, dropout=0.3, output_dim=2):\n",
    "#         super(GCN3, self).__init__()\n",
    "#         self.conv1 = GCNConv(input_dim, hidden_dim)\n",
    "#         self.bn1 = nn.BatchNorm1d(hidden_dim)\n",
    "        \n",
    "#         self.conv2 = GCNConv(hidden_dim, hidden_dim)\n",
    "#         self.bn2 = nn.BatchNorm1d(hidden_dim)\n",
    "        \n",
    "#         self.conv3 = GCNConv(hidden_dim, output_dim)\n",
    "#         self.dropout = dropout\n",
    "\n",
    "#     def forward(self, data):\n",
    "#         x, edge_index = data.x, data.edge_index\n",
    "        \n",
    "#         x = F.relu(self.bn1(self.conv1(x, edge_index)))\n",
    "#         x = F.dropout(x, p=self.dropout, training=self.training)\n",
    "        \n",
    "#         x = F.relu(self.bn2(self.conv2(x, edge_index)))\n",
    "#         x = F.dropout(x, p=self.dropout, training=self.training)\n",
    "        \n",
    "#         x = self.conv3(x, edge_index)\n",
    "#         return x"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
